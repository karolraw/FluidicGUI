{"ast":null,"code":"var _jsxFileName = \"E:\\\\flow chemistry\\\\fluidicGUI\\\\frontend\\\\fluidicgui\\\\src\\\\context\\\\ColorSchemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Define available color schemes for buttons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const buttonColorSchemeOptions = {\n  viridis: 'Viridis',\n  plasma: 'Plasma',\n  inferno: 'Inferno',\n  cividis: 'Cividis (Colorblind-friendly)',\n  turbo: 'Turbo'\n};\n\n// Create the context for button color schemes\nconst ButtonColorSchemeContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const ButtonColorSchemeProvider = ({\n  children\n}) => {\n  _s();\n  const [buttonColorScheme, setButtonColorScheme] = useState('plasma'); // Plasma as default\n\n  const updateButtonColorScheme = newScheme => {\n    if (buttonColorSchemeOptions[newScheme]) {\n      setButtonColorScheme(newScheme);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ButtonColorSchemeContext.Provider, {\n    value: {\n      buttonColorScheme,\n      updateButtonColorScheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the button color scheme context\n_s(ButtonColorSchemeProvider, \"oLuH8TasE/HXbOcxVZo4BdauK2I=\");\n_c = ButtonColorSchemeProvider;\nexport const useButtonColorScheme = () => {\n  _s2();\n  const context = useContext(ButtonColorSchemeContext);\n  if (!context) {\n    throw new Error('useButtonColorScheme must be used within a ButtonColorSchemeProvider');\n  }\n  return context;\n};\n\n// Gradient preview component for color schemes\n_s2(useButtonColorScheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ColorSchemePreview = ({\n  scheme,\n  width = '100%'\n}) => {\n  // Preview gradients for each color scheme\n  const getPreviewStyle = selectedScheme => {\n    let gradient;\n    switch (selectedScheme) {\n      case 'viridis':\n        gradient = 'linear-gradient(to right, rgb(68, 1, 84), rgb(59, 82, 139), rgb(33, 144, 141), rgb(126, 211, 33), rgb(253, 231, 37))';\n        break;\n      case 'plasma':\n        gradient = 'linear-gradient(to right, rgb(13, 8, 135), rgb(156, 71, 155), rgb(240, 189, 60), rgb(252, 255, 164))';\n        break;\n      case 'inferno':\n        gradient = 'linear-gradient(to right, rgb(0, 0, 4), rgb(120, 28, 99), rgb(220, 40, 39), rgb(252, 250, 67))';\n        break;\n      case 'cividis':\n        gradient = 'linear-gradient(to right, rgb(0, 32, 77), rgb(97, 185, 144), rgb(255, 240, 30))';\n        break;\n      case 'turbo':\n        gradient = 'linear-gradient(to right, rgb(48, 18, 227), rgb(48, 165, 177), rgb(82, 229, 46), rgb(255, 239, 36), rgb(210, 96, 31), rgb(130, 19, 56))';\n        break;\n      default:\n        // Default to cividis\n        gradient = 'linear-gradient(to right, rgb(0, 32, 77), rgb(97, 185, 144), rgb(255, 240, 30))';\n    }\n    return {\n      background: gradient,\n      height: '15px',\n      width: width,\n      borderRadius: '3px',\n      marginTop: '5px'\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: getPreviewStyle(scheme)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ColorSchemePreview;\nexport default ButtonColorSchemeContext;\nvar _c, _c2;\n$RefreshReg$(_c, \"ButtonColorSchemeProvider\");\n$RefreshReg$(_c2, \"ColorSchemePreview\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","buttonColorSchemeOptions","viridis","plasma","inferno","cividis","turbo","ButtonColorSchemeContext","ButtonColorSchemeProvider","children","_s","buttonColorScheme","setButtonColorScheme","updateButtonColorScheme","newScheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useButtonColorScheme","_s2","context","Error","ColorSchemePreview","scheme","width","getPreviewStyle","selectedScheme","gradient","background","height","borderRadius","marginTop","style","_c2","$RefreshReg$"],"sources":["E:/flow chemistry/fluidicGUI/frontend/fluidicgui/src/context/ColorSchemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Define available color schemes for buttons\r\nexport const buttonColorSchemeOptions = {\r\n  viridis: 'Viridis',\r\n  plasma: 'Plasma',\r\n  inferno: 'Inferno',\r\n  cividis: 'Cividis (Colorblind-friendly)',\r\n  turbo: 'Turbo'\r\n};\r\n\r\n// Create the context for button color schemes\r\nconst ButtonColorSchemeContext = createContext();\r\n\r\n// Create a provider component\r\nexport const ButtonColorSchemeProvider = ({ children }) => {\r\n  const [buttonColorScheme, setButtonColorScheme] = useState('plasma'); // Plasma as default\r\n\r\n  const updateButtonColorScheme = (newScheme) => {\r\n    if (buttonColorSchemeOptions[newScheme]) {\r\n      setButtonColorScheme(newScheme);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ButtonColorSchemeContext.Provider value={{ buttonColorScheme, updateButtonColorScheme }}>\r\n      {children}\r\n    </ButtonColorSchemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the button color scheme context\r\nexport const useButtonColorScheme = () => {\r\n  const context = useContext(ButtonColorSchemeContext);\r\n  if (!context) {\r\n    throw new Error('useButtonColorScheme must be used within a ButtonColorSchemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Gradient preview component for color schemes\r\nexport const ColorSchemePreview = ({ scheme, width = '100%' }) => {\r\n  // Preview gradients for each color scheme\r\n  const getPreviewStyle = (selectedScheme) => {\r\n    let gradient;\r\n    \r\n    switch(selectedScheme) {\r\n      case 'viridis':\r\n        gradient = 'linear-gradient(to right, rgb(68, 1, 84), rgb(59, 82, 139), rgb(33, 144, 141), rgb(126, 211, 33), rgb(253, 231, 37))';\r\n        break;\r\n      case 'plasma':\r\n        gradient = 'linear-gradient(to right, rgb(13, 8, 135), rgb(156, 71, 155), rgb(240, 189, 60), rgb(252, 255, 164))';\r\n        break;\r\n      case 'inferno':\r\n        gradient = 'linear-gradient(to right, rgb(0, 0, 4), rgb(120, 28, 99), rgb(220, 40, 39), rgb(252, 250, 67))';\r\n        break;\r\n      case 'cividis':\r\n        gradient = 'linear-gradient(to right, rgb(0, 32, 77), rgb(97, 185, 144), rgb(255, 240, 30))';\r\n        break;\r\n      case 'turbo':\r\n        gradient = 'linear-gradient(to right, rgb(48, 18, 227), rgb(48, 165, 177), rgb(82, 229, 46), rgb(255, 239, 36), rgb(210, 96, 31), rgb(130, 19, 56))';\r\n        break;\r\n      default:\r\n        // Default to cividis\r\n        gradient = 'linear-gradient(to right, rgb(0, 32, 77), rgb(97, 185, 144), rgb(255, 240, 30))';\r\n    }\r\n    \r\n    return {\r\n      background: gradient,\r\n      height: '15px',\r\n      width: width,\r\n      borderRadius: '3px',\r\n      marginTop: '5px'\r\n    };\r\n  };\r\n  \r\n  return (\r\n    <div style={getPreviewStyle(scheme)}></div>\r\n  );\r\n};\r\n\r\nexport default ButtonColorSchemeContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,wBAAwB,GAAG;EACtCC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,+BAA+B;EACxCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,wBAAwB,gBAAGX,aAAa,CAAC,CAAC;;AAEhD;AACA,OAAO,MAAMY,yBAAyB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAEtE,MAAMgB,uBAAuB,GAAIC,SAAS,IAAK;IAC7C,IAAIb,wBAAwB,CAACa,SAAS,CAAC,EAAE;MACvCF,oBAAoB,CAACE,SAAS,CAAC;IACjC;EACF,CAAC;EAED,oBACEd,OAAA,CAACO,wBAAwB,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,iBAAiB;MAAEE;IAAwB,CAAE;IAAAJ,QAAA,EACtFA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACwB,CAAC;AAExC,CAAC;;AAED;AAAAV,EAAA,CAhBaF,yBAAyB;AAAAa,EAAA,GAAzBb,yBAAyB;AAiBtC,OAAO,MAAMc,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACxC,MAAMC,OAAO,GAAG1B,UAAU,CAACS,wBAAwB,CAAC;EACpD,IAAI,CAACiB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,sEAAsE,CAAC;EACzF;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,GAAA,CARaD,oBAAoB;AASjC,OAAO,MAAMI,kBAAkB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK,GAAG;AAAO,CAAC,KAAK;EAChE;EACA,MAAMC,eAAe,GAAIC,cAAc,IAAK;IAC1C,IAAIC,QAAQ;IAEZ,QAAOD,cAAc;MACnB,KAAK,SAAS;QACZC,QAAQ,GAAG,sHAAsH;QACjI;MACF,KAAK,QAAQ;QACXA,QAAQ,GAAG,sGAAsG;QACjH;MACF,KAAK,SAAS;QACZA,QAAQ,GAAG,gGAAgG;QAC3G;MACF,KAAK,SAAS;QACZA,QAAQ,GAAG,iFAAiF;QAC5F;MACF,KAAK,OAAO;QACVA,QAAQ,GAAG,yIAAyI;QACpJ;MACF;QACE;QACAA,QAAQ,GAAG,iFAAiF;IAChG;IAEA,OAAO;MACLC,UAAU,EAAED,QAAQ;MACpBE,MAAM,EAAE,MAAM;MACdL,KAAK,EAAEA,KAAK;MACZM,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EAED,oBACEnC,OAAA;IAAKoC,KAAK,EAAEP,eAAe,CAACF,MAAM;EAAE;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE/C,CAAC;AAACiB,GAAA,GAtCWX,kBAAkB;AAwC/B,eAAenB,wBAAwB;AAAC,IAAAc,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}