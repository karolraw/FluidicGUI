{"ast":null,"code":"var _jsxFileName = \"E:\\\\flow chemistry\\\\fluidicGUI\\\\frontend\\\\fluidicgui\\\\src\\\\components\\\\DropletGenerator\\\\Manual\\\\DropletList.js\";\nimport React from 'react';\nimport DropletBar from './DropletBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropletItem = ({\n  droplet,\n  isSelected,\n  onClick,\n  parameterVisibility,\n  parameterRanges = {},\n  colorScheme\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: e => onClick(droplet.id, e) // Pass event for Ctrl/Shift detection\n    ,\n    style: {\n      border: isSelected ? '5px solid black' : '5px solid white',\n      padding: '0px',\n      margin: '0px',\n      backgroundColor: droplet.group ? 'lightgray' : 'white',\n      width: '37px',\n      // Set fixed width (or use percentage for responsive design)\n      boxSizing: 'border-box',\n      cursor: 'pointer',\n      userSelect: 'none'\n    },\n    children: droplet.parameters.map(param => parameterVisibility[`${param.nodeId}-${param.name}`] !== false && /*#__PURE__*/_jsxDEV(DropletBar, {\n      value: param.value,\n      range: parameterRanges[param.name],\n      colorScheme: colorScheme\n    }, `${param.nodeId}-${param.name}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = DropletItem;\nconst DropletList = ({\n  droplets,\n  selectedDroplets,\n  onSelectDroplet,\n  parameterVisibility = {},\n  parameterRanges = {},\n  colorScheme = 'cividis'\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      // Allow droplets to wrap to the next row\n      justifyContent: 'flex-start',\n      // Align droplets to the start\n      gap: '0px',\n      // Add space between droplets\n      width: '100%',\n      // Take the full width of the container\n      padding: '10px',\n      boxSizing: 'border-box',\n      maxHeight: '800px',\n      // Set the maximum height for the droplet list\n      overflowY: 'auto' // Enable vertical scrolling if content exceeds maxHeight\n    },\n    children: droplets.map(droplet => /*#__PURE__*/_jsxDEV(DropletItem, {\n      droplet: droplet,\n      isSelected: selectedDroplets.includes(droplet.id),\n      onClick: onSelectDroplet,\n      parameterVisibility: parameterVisibility,\n      parameterRanges: parameterRanges,\n      colorScheme: colorScheme\n    }, droplet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DropletList;\nexport default DropletList;\nvar _c, _c2;\n$RefreshReg$(_c, \"DropletItem\");\n$RefreshReg$(_c2, \"DropletList\");","map":{"version":3,"names":["React","DropletBar","jsxDEV","_jsxDEV","DropletItem","droplet","isSelected","onClick","parameterVisibility","parameterRanges","colorScheme","e","id","style","border","padding","margin","backgroundColor","group","width","boxSizing","cursor","userSelect","children","parameters","map","param","nodeId","name","value","range","fileName","_jsxFileName","lineNumber","columnNumber","_c","DropletList","droplets","selectedDroplets","onSelectDroplet","display","flexWrap","justifyContent","gap","maxHeight","overflowY","includes","_c2","$RefreshReg$"],"sources":["E:/flow chemistry/fluidicGUI/frontend/fluidicgui/src/components/DropletGenerator/Manual/DropletList.js"],"sourcesContent":["import React from 'react';\r\nimport DropletBar from './DropletBar';\r\n\r\nconst DropletItem = ({ droplet, isSelected, onClick, parameterVisibility, parameterRanges = {}, colorScheme }) => {\r\n  return (\r\n    <div\r\n      onClick={(e) => onClick(droplet.id, e)}  // Pass event for Ctrl/Shift detection\r\n      style={{\r\n        border: isSelected ? '5px solid black' : '5px solid white',\r\n        padding: '0px',\r\n        margin: '0px',\r\n        backgroundColor: droplet.group ? 'lightgray' : 'white',\r\n        width: '37px',            // Set fixed width (or use percentage for responsive design)\r\n        boxSizing: 'border-box',\r\n        cursor: 'pointer',\r\n        userSelect: 'none'\r\n      }}\r\n    >\r\n      {/*<h4>Droplet ID: {droplet.id}</h4>*/}\r\n      {droplet.parameters.map((param) => (\r\n        parameterVisibility[`${param.nodeId}-${param.name}`] !== false && (\r\n          <DropletBar \r\n            key={`${param.nodeId}-${param.name}`} \r\n            value={param.value}\r\n            range={parameterRanges[param.name]}\r\n            colorScheme={colorScheme}\r\n          />\r\n        )\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DropletList = ({ droplets, selectedDroplets, onSelectDroplet, parameterVisibility = {}, parameterRanges = {}, colorScheme = 'cividis' }) => {\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexWrap: 'wrap',         // Allow droplets to wrap to the next row\r\n      justifyContent: 'flex-start', // Align droplets to the start\r\n      gap: '0px',             // Add space between droplets\r\n      width: '100%',           // Take the full width of the container\r\n      padding: '10px',\r\n      boxSizing: 'border-box',\r\n      maxHeight: '800px',      // Set the maximum height for the droplet list\r\n      overflowY: 'auto',       // Enable vertical scrolling if content exceeds maxHeight\r\n    }}>\r\n      {droplets.map((droplet) => (\r\n        <DropletItem\r\n          key={droplet.id}\r\n          droplet={droplet}\r\n          isSelected={selectedDroplets.includes(droplet.id)}\r\n          onClick={onSelectDroplet}\r\n          parameterVisibility={parameterVisibility}\r\n          parameterRanges={parameterRanges}\r\n          colorScheme={colorScheme}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropletList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC,OAAO;EAAEC,mBAAmB;EAAEC,eAAe,GAAG,CAAC,CAAC;EAAEC;AAAY,CAAC,KAAK;EAChH,oBACEP,OAAA;IACEI,OAAO,EAAGI,CAAC,IAAKJ,OAAO,CAACF,OAAO,CAACO,EAAE,EAAED,CAAC,CAAE,CAAE;IAAA;IACzCE,KAAK,EAAE;MACLC,MAAM,EAAER,UAAU,GAAG,iBAAiB,GAAG,iBAAiB;MAC1DS,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE,KAAK;MACbC,eAAe,EAAEZ,OAAO,CAACa,KAAK,GAAG,WAAW,GAAG,OAAO;MACtDC,KAAK,EAAE,MAAM;MAAa;MAC1BC,SAAS,EAAE,YAAY;MACvBC,MAAM,EAAE,SAAS;MACjBC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,EAGDlB,OAAO,CAACmB,UAAU,CAACC,GAAG,CAAEC,KAAK,IAC5BlB,mBAAmB,CAAC,GAAGkB,KAAK,CAACC,MAAM,IAAID,KAAK,CAACE,IAAI,EAAE,CAAC,KAAK,KAAK,iBAC5DzB,OAAA,CAACF,UAAU;MAET4B,KAAK,EAAEH,KAAK,CAACG,KAAM;MACnBC,KAAK,EAAErB,eAAe,CAACiB,KAAK,CAACE,IAAI,CAAE;MACnClB,WAAW,EAAEA;IAAY,GAHpB,GAAGgB,KAAK,CAACC,MAAM,IAAID,KAAK,CAACE,IAAI,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIrC,CAEJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA5BI/B,WAAW;AA8BjB,MAAMgC,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,gBAAgB;EAAEC,eAAe;EAAE/B,mBAAmB,GAAG,CAAC,CAAC;EAAEC,eAAe,GAAG,CAAC,CAAC;EAAEC,WAAW,GAAG;AAAU,CAAC,KAAK;EAChJ,oBACEP,OAAA;IAAKU,KAAK,EAAE;MACV2B,OAAO,EAAE,MAAM;MACfC,QAAQ,EAAE,MAAM;MAAU;MAC1BC,cAAc,EAAE,YAAY;MAAE;MAC9BC,GAAG,EAAE,KAAK;MAAc;MACxBxB,KAAK,EAAE,MAAM;MAAY;MACzBJ,OAAO,EAAE,MAAM;MACfK,SAAS,EAAE,YAAY;MACvBwB,SAAS,EAAE,OAAO;MAAO;MACzBC,SAAS,EAAE,MAAM,CAAQ;IAC3B,CAAE;IAAAtB,QAAA,EACCc,QAAQ,CAACZ,GAAG,CAAEpB,OAAO,iBACpBF,OAAA,CAACC,WAAW;MAEVC,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEgC,gBAAgB,CAACQ,QAAQ,CAACzC,OAAO,CAACO,EAAE,CAAE;MAClDL,OAAO,EAAEgC,eAAgB;MACzB/B,mBAAmB,EAAEA,mBAAoB;MACzCC,eAAe,EAAEA,eAAgB;MACjCC,WAAW,EAAEA;IAAY,GANpBL,OAAO,CAACO,EAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOhB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACa,GAAA,GA1BIX,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}