{"ast":null,"code":"var _jsxFileName = \"E:\\\\flow chemistry\\\\fluidicGUI\\\\frontend\\\\fluidicgui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, lazy, Suspense } from 'react';\nimport { ReactFlowProvider, useNodesState, useEdgesState } from 'react-flow-renderer';\nimport FlowchartEditor from './components/Flowchart/FlowchartEditor';\nimport SidePanel from './components/Flowchart/SidePanel';\nimport PlaceholderComponent from './components/DropletGenerator/PlaceholderComponent';\nimport ScriptBasedGeneration from './components/DropletGenerator/ScriptBasedGeneration';\nimport NavigationBar from './components/Navigation/NavigationBar';\nimport { ButtonColorSchemeProvider } from './context/ColorSchemeContext';\nimport { ButtonStyleProvider } from './styles/ButtonStyleProvider';\nimport { WS_URL } from './config';\nimport { createWebSocket, parseDeviceInfo, setupMQTTDebugger } from './utils/mqttDebugger';\nimport USBSpectrometer from './components/Simulation/USBSpectrometer';\nimport SpectrometerMQTT from './components/Simulation/SpectrometerMQTT';\nimport PumpPanel from './components/Simulation/PumpPanel';\n\n// Lazy load heavy components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Simulation = /*#__PURE__*/lazy(_c = () => import('./components/Simulation/Simulation'));\n_c2 = Simulation;\nconst ManualDropletCreation = /*#__PURE__*/lazy(_c3 = () => import('./components/DropletGenerator/Manual/ManualDropletCreation'));\n_c4 = ManualDropletCreation;\nconst ResponseSurfaceGenerator = /*#__PURE__*/lazy(_c5 = () => import('./components/DropletGenerator/ResponseSurfaceGenerator'));\n_c6 = ResponseSurfaceGenerator;\nconst InterpolationGenerator = /*#__PURE__*/lazy(_c7 = () => import('./components/DropletGenerator/InterpolationGenerator'));\n\n// For WebSocket connection\n_c8 = InterpolationGenerator;\nconst WebSocket = window.WebSocket || window.MozWebSocket;\nconst App = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [nodeType, setNodeType] = useState('');\n  const [droplets, setDroplets] = useState([]);\n  const [manualDroplets, setManualDroplets] = useState([]);\n  const [rsmDroplets, setRsmDroplets] = useState([]);\n  const [parameterRanges, setParameterRanges] = useState({});\n  const [parameterVisibility, setParameterVisibility] = useState({});\n  const [simulationAvailable, setSimulationAvailable] = useState(false);\n  const [hasDropletNode, setHasDropletNode] = useState(false);\n  const [ws, setWs] = useState(null);\n  const [detectedDevices, setDetectedDevices] = useState([]);\n\n  // State for dynamic overlay components\n  const [overlayComponent, setOverlayComponent] = useState(null);\n\n  // Initialize MQTT debugger\n  useEffect(() => {\n    setupMQTTDebugger();\n  }, []);\n\n  // Set up global event handlers for cross-component communication\n  useEffect(() => {\n    // Create a global event system if it doesn't exist\n    if (!window.customEvents) {\n      window.customEvents = {\n        openSpectrometer: node => {\n          console.log('Global openSpectrometer called, but no handler is registered yet');\n        },\n        setSpectrometerHandler: handler => {\n          window.customEvents.openSpectrometer = handler;\n          console.log('Spectrometer handler registered');\n        },\n        openPump: node => {\n          console.log('Global openPump called, but no handler is registered yet');\n        },\n        setPumpHandler: handler => {\n          window.customEvents.openPump = handler;\n          console.log('Pump handler registered');\n        }\n      };\n    }\n\n    // Setup spectrometer opening functionality\n    const openSpectrometerNode = nodeData => {\n      console.log('App.js: Opening spectrometer directly for node:', nodeData);\n      console.log('App.js: Using detectorId:', nodeData.MQTTname);\n\n      // Generate sample readings for demo\n      const generateSampleReadings = () => {\n        const readings = [];\n        const now = Date.now();\n\n        // Generate a sine wave with noise\n        for (let i = 0; i < 100; i++) {\n          const baseValue = Math.sin(i / 10) * 0.5 + 0.5;\n          const noise = Math.random() * 0.1;\n          readings.push({\n            value: baseValue + noise,\n            timestamp: now - (100 - i) * 100\n          });\n        }\n        return readings;\n      };\n\n      // Set the overlay component based on node type\n      setOverlayComponent({\n        type: nodeData.type === 'MQTTSpectrometer' ? 'MQTTSpectrometer' : 'USBSpectrometer',\n        props: {\n          detector: nodeData,\n          readings: generateSampleReadings(),\n          onClose: () => setOverlayComponent(null),\n          initialPosition: {\n            x: 50,\n            y: 100\n          },\n          detectorId: nodeData.MQTTname // Pass MQTTname as detectorId\n        }\n      });\n    };\n\n    // Setup pump opening functionality\n    const openPumpNode = nodeData => {\n      console.log('App.js: Opening pump control for node:', nodeData);\n\n      // Set the overlay component for pump\n      setOverlayComponent({\n        type: 'PumpPanel',\n        props: {\n          pump: nodeData,\n          nodes: nodes,\n          edges: edges,\n          onClose: () => setOverlayComponent(null),\n          initialPosition: {\n            x: 100,\n            y: 150\n          },\n          onAction: action => {\n            console.log('Pump action in App.js:', action);\n            // Handle pump actions if needed\n          }\n        }\n      });\n    };\n\n    // Register the handlers\n    window.customEvents.setSpectrometerHandler(openSpectrometerNode);\n    window.customEvents.setPumpHandler(openPumpNode);\n\n    // Cleanup on unmount\n    return () => {\n      if (window.customEvents) {\n        window.customEvents.setSpectrometerHandler(() => {\n          console.log('App component unmounted, spectrometer handler reset');\n        });\n        window.customEvents.setPumpHandler(() => {\n          console.log('App component unmounted, pump handler reset');\n        });\n      }\n    };\n  }, [nodes, edges]);\n  useEffect(() => {\n    // Create WebSocket connection with auto-reconnect\n    const cleanup = createWebSocket(WS_URL, {\n      onOpen: websocket => {\n        console.log('Connected to WebSocket server');\n        setWs(websocket);\n        window.appWebSocket = websocket; // Make available for debugging\n\n        // Send device scan message when the app starts\n        const scanMessage = {\n          topic: \"common/device_scan\",\n          payload: {}\n        };\n        websocket.send(JSON.stringify(scanMessage));\n        console.log('Sent device scan message on startup');\n\n        // Reset the detected devices list\n        setDetectedDevices([]);\n      },\n      onMessage: data => {\n        // Check if this is a device response message\n        if (data.topic === 'common/device_response') {\n          const deviceInfo = parseDeviceInfo(data.payload);\n          if (deviceInfo) {\n            setDetectedDevices(prev => {\n              // Check if device is already in the list\n              const exists = prev.some(device => device.MQTTname === deviceInfo.MQTTname);\n              if (!exists) {\n                console.log(`New device detected: ${deviceInfo.MQTTname} (${deviceInfo.type})`);\n                return [...prev, deviceInfo];\n              }\n              return prev;\n            });\n          }\n        }\n      },\n      onError: error => {\n        console.error('WebSocket error:', error);\n      }\n    });\n\n    // Cleanup on unmount\n    return () => {\n      cleanup();\n    };\n  }, []);\n  const handleScanDevices = () => {\n    console.log('Scan Devices button clicked');\n    console.log('WebSocket state:', ws ? ws.readyState : 'No WebSocket');\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      // Reset the detected devices list\n      setDetectedDevices([]);\n      console.log('Detected devices list reset');\n\n      // Send device scan message\n      const scanMessage = {\n        topic: \"common/device_scan\",\n        payload: {}\n      };\n      ws.send(JSON.stringify(scanMessage));\n      console.log('Sent device scan message via button click');\n    } else {\n      console.error('WebSocket is not connected - cannot scan for devices');\n    }\n  };\n  useEffect(() => {\n    console.log('Current Nodes in App.js:', nodes);\n  }, [nodes]);\n  useEffect(() => {\n    // Check if ws is connected\n    if (ws) {\n      console.log('WebSocket connection state updated:', ws.readyState);\n    }\n  }, [ws]);\n  useEffect(() => {\n    console.log('Detected devices:', detectedDevices);\n    // Make detected devices available globally for the CustomNode component\n    window.detectedDevices = detectedDevices;\n  }, [detectedDevices]);\n\n  // Check if there's at least one droplet node in the flowchart\n  useEffect(() => {\n    const dropletNodeExists = nodes.some(node => node.data.type === 'droplet');\n    setHasDropletNode(dropletNodeExists);\n    console.log('Droplet node exists:', dropletNodeExists);\n  }, [nodes]);\n  const handleNavigate = newStep => {\n    if (newStep === 7 && !simulationAvailable) {\n      console.log('Simulation not available yet. Please create droplets first.');\n      setStep(3); // Redirect to droplet creation if available\n    } else if ((newStep === 3 || newStep === 4 || newStep === 8) && !hasDropletNode) {\n      console.log('No droplet node in flowchart. Please add a droplet node first.');\n      setStep(1); // Redirect to flowchart editor\n    } else {\n      setStep(newStep);\n    }\n  };\n  const handlePropertyChange = useCallback((nodeId, propertyName, propertyValue) => {\n    setNodes(nds => nds.map(node => node.id === nodeId ? {\n      ...node,\n      data: {\n        ...node.data,\n        [propertyName]: propertyValue\n      }\n    } : node));\n  }, [setNodes]);\n  const handleAddNode = useCallback(({\n    id,\n    label,\n    type\n  }) => {\n    setNodes(nds => [...nds, {\n      id,\n      type: type,\n      label: label,\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      },\n      data: {\n        label,\n        type,\n        onPropertyChange: (propertyName, propertyValue) => handlePropertyChange(id, propertyName, propertyValue)\n      }\n    }]);\n  }, [setNodes, handlePropertyChange]);\n  const handleSimulationStart = createdDroplets => {\n    setDroplets(createdDroplets);\n    setSimulationAvailable(true);\n    setStep(7);\n  };\n  const handleRSMDropletGeneration = generatedDroplets => {\n    setManualDroplets(generatedDroplets);\n    setSimulationAvailable(true);\n    setStep(3);\n  };\n  const handleInterpolationGeneration = generatedDroplets => {\n    setManualDroplets(generatedDroplets);\n    setSimulationAvailable(true);\n    setStep(3); // Go to Manual Droplet Creation instead of simulation\n  };\n  const getCarrierPumps = () => {\n    return nodes.filter(node => node.data.type === 'pump' && node.data.carrier === true).map(node => node.id);\n  };\n\n  // Loading components\n  const LoadingSimulation = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading Simulation...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n  const LoadingDropletCreation = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading Droplet Creator...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n  const LoadingRSM = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading Response Surface Methodology...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n  const LoadingInterpolation = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading Parameter Interpolation...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ButtonColorSchemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(ButtonStyleProvider, {\n      children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n            currentStep: step,\n            onNavigate: handleNavigate,\n            simulationAvailable: simulationAvailable,\n            hasDropletNode: hasDropletNode,\n            deviceCount: detectedDevices.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              display: 'flex'\n            },\n            children: [step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(FlowchartEditor, {\n                onAddNode: handleAddNode,\n                nodes: nodes,\n                setNodes: setNodes,\n                edges: edges,\n                setEdges: setEdges,\n                onNodesChange: onNodesChange,\n                onEdgesChange: onEdgesChange,\n                onProceed: () => handleNavigate(3),\n                onScanDevices: handleScanDevices,\n                detectedDevices: detectedDevices\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), step === 3 && /*#__PURE__*/_jsxDEV(Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(LoadingDropletCreation, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 37\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ManualDropletCreation, {\n                availableParameters: [],\n                nodes: nodes,\n                setNodes: setNodes,\n                onNext: handleSimulationStart,\n                selectedCarrierPumps: getCarrierPumps(),\n                droplets: manualDroplets,\n                setDroplets: setManualDroplets,\n                parameterRanges: parameterRanges,\n                setParameterRanges: setParameterRanges,\n                parameterVisibility: parameterVisibility,\n                setParameterVisibility: setParameterVisibility\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), step === 4 && /*#__PURE__*/_jsxDEV(Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(LoadingRSM, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 37\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ResponseSurfaceGenerator, {\n                nodes: nodes,\n                setNodes: setNodes,\n                onNext: handleRSMDropletGeneration,\n                selectedCarrierPumps: getCarrierPumps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), step === 5 && /*#__PURE__*/_jsxDEV(ScriptBasedGeneration, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 30\n            }, this), step === 6 && /*#__PURE__*/_jsxDEV(PlaceholderComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 30\n            }, this), step === 8 && /*#__PURE__*/_jsxDEV(Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(LoadingInterpolation, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 37\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(InterpolationGenerator, {\n                nodes: nodes,\n                selectedCarrierPumps: getCarrierPumps(),\n                onNext: handleInterpolationGeneration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this), step === 7 && /*#__PURE__*/_jsxDEV(Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(LoadingSimulation, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 37\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Simulation, {\n                nodes: nodes,\n                edges: edges,\n                droplets: droplets,\n                selectedCarrierPumps: getCarrierPumps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), overlayComponent && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              zIndex: 9999,\n              // Higher than everything else\n              pointerEvents: 'none' // Allow clicking through the container, but not its children\n            },\n            children: /*#__PURE__*/_jsxDEV(Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'fixed',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  background: 'rgba(0,0,0,0.8)',\n                  padding: '20px',\n                  borderRadius: '8px',\n                  color: 'white',\n                  pointerEvents: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Loading Component...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this),\n              children: [overlayComponent.type === 'USBSpectrometer' && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  pointerEvents: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(USBSpectrometer, {\n                  ...overlayComponent.props\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this), overlayComponent.type === 'MQTTSpectrometer' && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  pointerEvents: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(SpectrometerMQTT, {\n                  ...overlayComponent.props\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 21\n              }, this), overlayComponent.type === 'PumpPanel' && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  pointerEvents: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(PumpPanel, {\n                  ...overlayComponent.props\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uj86hJ9Wlu8c2+N3qVYGcs/VCvQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c9 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Simulation$lazy\");\n$RefreshReg$(_c2, \"Simulation\");\n$RefreshReg$(_c3, \"ManualDropletCreation$lazy\");\n$RefreshReg$(_c4, \"ManualDropletCreation\");\n$RefreshReg$(_c5, \"ResponseSurfaceGenerator$lazy\");\n$RefreshReg$(_c6, \"ResponseSurfaceGenerator\");\n$RefreshReg$(_c7, \"InterpolationGenerator$lazy\");\n$RefreshReg$(_c8, \"InterpolationGenerator\");\n$RefreshReg$(_c9, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","lazy","Suspense","ReactFlowProvider","useNodesState","useEdgesState","FlowchartEditor","SidePanel","PlaceholderComponent","ScriptBasedGeneration","NavigationBar","ButtonColorSchemeProvider","ButtonStyleProvider","WS_URL","createWebSocket","parseDeviceInfo","setupMQTTDebugger","USBSpectrometer","SpectrometerMQTT","PumpPanel","jsxDEV","_jsxDEV","Simulation","_c","_c2","ManualDropletCreation","_c3","_c4","ResponseSurfaceGenerator","_c5","_c6","InterpolationGenerator","_c7","_c8","WebSocket","window","MozWebSocket","App","_s","step","setStep","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeType","setNodeType","droplets","setDroplets","manualDroplets","setManualDroplets","rsmDroplets","setRsmDroplets","parameterRanges","setParameterRanges","parameterVisibility","setParameterVisibility","simulationAvailable","setSimulationAvailable","hasDropletNode","setHasDropletNode","ws","setWs","detectedDevices","setDetectedDevices","overlayComponent","setOverlayComponent","customEvents","openSpectrometer","node","console","log","setSpectrometerHandler","handler","openPump","setPumpHandler","openSpectrometerNode","nodeData","MQTTname","generateSampleReadings","readings","now","Date","i","baseValue","Math","sin","noise","random","push","value","timestamp","type","props","detector","onClose","initialPosition","x","y","detectorId","openPumpNode","pump","onAction","action","cleanup","onOpen","websocket","appWebSocket","scanMessage","topic","payload","send","JSON","stringify","onMessage","data","deviceInfo","prev","exists","some","device","onError","error","handleScanDevices","readyState","OPEN","dropletNodeExists","handleNavigate","newStep","handlePropertyChange","nodeId","propertyName","propertyValue","nds","map","id","handleAddNode","label","position","onPropertyChange","handleSimulationStart","createdDroplets","handleRSMDropletGeneration","generatedDroplets","handleInterpolationGeneration","getCarrierPumps","filter","carrier","LoadingSimulation","style","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","LoadingDropletCreation","LoadingRSM","LoadingInterpolation","flexDirection","currentStep","onNavigate","deviceCount","length","flex","onAddNode","onProceed","onScanDevices","fallback","availableParameters","onNext","selectedCarrierPumps","top","left","right","bottom","zIndex","pointerEvents","transform","background","padding","borderRadius","color","_c9","$RefreshReg$"],"sources":["E:/flow chemistry/fluidicGUI/frontend/fluidicgui/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, lazy, Suspense } from 'react';\r\nimport { ReactFlowProvider, useNodesState, useEdgesState } from 'react-flow-renderer';\r\nimport FlowchartEditor from './components/Flowchart/FlowchartEditor';\r\nimport SidePanel from './components/Flowchart/SidePanel';\r\nimport PlaceholderComponent from './components/DropletGenerator/PlaceholderComponent';\r\nimport ScriptBasedGeneration from './components/DropletGenerator/ScriptBasedGeneration';\r\nimport NavigationBar from './components/Navigation/NavigationBar';\r\nimport { ButtonColorSchemeProvider } from './context/ColorSchemeContext';\r\nimport { ButtonStyleProvider } from './styles/ButtonStyleProvider';\r\nimport { WS_URL } from './config';\r\nimport { createWebSocket, parseDeviceInfo, setupMQTTDebugger } from './utils/mqttDebugger';\r\nimport USBSpectrometer from './components/Simulation/USBSpectrometer';\r\nimport SpectrometerMQTT from './components/Simulation/SpectrometerMQTT';\r\nimport PumpPanel from './components/Simulation/PumpPanel';\r\n\r\n// Lazy load heavy components\r\nconst Simulation = lazy(() => import('./components/Simulation/Simulation'));\r\nconst ManualDropletCreation = lazy(() => import('./components/DropletGenerator/Manual/ManualDropletCreation'));\r\nconst ResponseSurfaceGenerator = lazy(() => import('./components/DropletGenerator/ResponseSurfaceGenerator'));\r\nconst InterpolationGenerator = lazy(() => import('./components/DropletGenerator/InterpolationGenerator'));\r\n\r\n// For WebSocket connection\r\nconst WebSocket = window.WebSocket || window.MozWebSocket;\r\n\r\nconst App = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [nodeType, setNodeType] = useState('');\r\n  const [droplets, setDroplets] = useState([]);\r\n  const [manualDroplets, setManualDroplets] = useState([]);\r\n  const [rsmDroplets, setRsmDroplets] = useState([]);\r\n  const [parameterRanges, setParameterRanges] = useState({});\r\n  const [parameterVisibility, setParameterVisibility] = useState({});\r\n  const [simulationAvailable, setSimulationAvailable] = useState(false);\r\n  const [hasDropletNode, setHasDropletNode] = useState(false);\r\n  const [ws, setWs] = useState(null);\r\n  const [detectedDevices, setDetectedDevices] = useState([]);\r\n  \r\n  // State for dynamic overlay components\r\n  const [overlayComponent, setOverlayComponent] = useState(null);\r\n\r\n  // Initialize MQTT debugger\r\n  useEffect(() => {\r\n    setupMQTTDebugger();\r\n  }, []);\r\n\r\n  // Set up global event handlers for cross-component communication\r\n  useEffect(() => {\r\n    // Create a global event system if it doesn't exist\r\n    if (!window.customEvents) {\r\n      window.customEvents = {\r\n        openSpectrometer: (node) => {\r\n          console.log('Global openSpectrometer called, but no handler is registered yet');\r\n        },\r\n        setSpectrometerHandler: (handler) => {\r\n          window.customEvents.openSpectrometer = handler;\r\n          console.log('Spectrometer handler registered');\r\n        },\r\n        openPump: (node) => {\r\n          console.log('Global openPump called, but no handler is registered yet');\r\n        },\r\n        setPumpHandler: (handler) => {\r\n          window.customEvents.openPump = handler;\r\n          console.log('Pump handler registered');\r\n        }\r\n      };\r\n    }\r\n\r\n    // Setup spectrometer opening functionality\r\n    const openSpectrometerNode = (nodeData) => {\r\n      console.log('App.js: Opening spectrometer directly for node:', nodeData);\r\n      console.log('App.js: Using detectorId:', nodeData.MQTTname);\r\n      \r\n      // Generate sample readings for demo\r\n      const generateSampleReadings = () => {\r\n        const readings = [];\r\n        const now = Date.now();\r\n        \r\n        // Generate a sine wave with noise\r\n        for (let i = 0; i < 100; i++) {\r\n          const baseValue = Math.sin(i / 10) * 0.5 + 0.5;\r\n          const noise = Math.random() * 0.1;\r\n          \r\n          readings.push({\r\n            value: baseValue + noise,\r\n            timestamp: now - (100 - i) * 100,\r\n          });\r\n        }\r\n        \r\n        return readings;\r\n      };\r\n      \r\n      // Set the overlay component based on node type\r\n      setOverlayComponent({\r\n        type: nodeData.type === 'MQTTSpectrometer' ? 'MQTTSpectrometer' : 'USBSpectrometer',\r\n        props: {\r\n          detector: nodeData,\r\n          readings: generateSampleReadings(),\r\n          onClose: () => setOverlayComponent(null),\r\n          initialPosition: { x: 50, y: 100 },\r\n          detectorId: nodeData.MQTTname // Pass MQTTname as detectorId\r\n        }\r\n      });\r\n    };\r\n\r\n    // Setup pump opening functionality\r\n    const openPumpNode = (nodeData) => {\r\n      console.log('App.js: Opening pump control for node:', nodeData);\r\n      \r\n      // Set the overlay component for pump\r\n      setOverlayComponent({\r\n        type: 'PumpPanel',\r\n        props: {\r\n          pump: nodeData,\r\n          nodes: nodes,\r\n          edges: edges,\r\n          onClose: () => setOverlayComponent(null),\r\n          initialPosition: { x: 100, y: 150 },\r\n          onAction: (action) => {\r\n            console.log('Pump action in App.js:', action);\r\n            // Handle pump actions if needed\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    // Register the handlers\r\n    window.customEvents.setSpectrometerHandler(openSpectrometerNode);\r\n    window.customEvents.setPumpHandler(openPumpNode);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (window.customEvents) {\r\n        window.customEvents.setSpectrometerHandler(() => {\r\n          console.log('App component unmounted, spectrometer handler reset');\r\n        });\r\n        window.customEvents.setPumpHandler(() => {\r\n          console.log('App component unmounted, pump handler reset');\r\n        });\r\n      }\r\n    };\r\n  }, [nodes, edges]);\r\n\r\n  useEffect(() => {\r\n    // Create WebSocket connection with auto-reconnect\r\n    const cleanup = createWebSocket(WS_URL, {\r\n      onOpen: (websocket) => {\r\n        console.log('Connected to WebSocket server');\r\n        setWs(websocket);\r\n        window.appWebSocket = websocket; // Make available for debugging\r\n        \r\n        // Send device scan message when the app starts\r\n        const scanMessage = {\r\n          topic: \"common/device_scan\",\r\n          payload: {}\r\n        };\r\n        \r\n        websocket.send(JSON.stringify(scanMessage));\r\n        console.log('Sent device scan message on startup');\r\n        \r\n        // Reset the detected devices list\r\n        setDetectedDevices([]);\r\n      },\r\n      onMessage: (data) => {\r\n        // Check if this is a device response message\r\n        if (data.topic === 'common/device_response') {\r\n          const deviceInfo = parseDeviceInfo(data.payload);\r\n          \r\n          if (deviceInfo) {\r\n            setDetectedDevices(prev => {\r\n              // Check if device is already in the list\r\n              const exists = prev.some(device => device.MQTTname === deviceInfo.MQTTname);\r\n              if (!exists) {\r\n                console.log(`New device detected: ${deviceInfo.MQTTname} (${deviceInfo.type})`);\r\n                return [...prev, deviceInfo];\r\n              }\r\n              return prev;\r\n            });\r\n          }\r\n        }\r\n      },\r\n      onError: (error) => {\r\n        console.error('WebSocket error:', error);\r\n      }\r\n    });\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      cleanup();\r\n    };\r\n  }, []);\r\n\r\n  const handleScanDevices = () => {\r\n    console.log('Scan Devices button clicked');\r\n    console.log('WebSocket state:', ws ? ws.readyState : 'No WebSocket');\r\n    \r\n    if (ws && ws.readyState === WebSocket.OPEN) {\r\n      // Reset the detected devices list\r\n      setDetectedDevices([]);\r\n      console.log('Detected devices list reset');\r\n      \r\n      // Send device scan message\r\n      const scanMessage = {\r\n        topic: \"common/device_scan\",\r\n        payload: {}\r\n      };\r\n      \r\n      ws.send(JSON.stringify(scanMessage));\r\n      console.log('Sent device scan message via button click');\r\n    } else {\r\n      console.error('WebSocket is not connected - cannot scan for devices');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Current Nodes in App.js:', nodes);\r\n  }, [nodes]);\r\n  \r\n  useEffect(() => {\r\n    // Check if ws is connected\r\n    if (ws) {\r\n      console.log('WebSocket connection state updated:', ws.readyState);\r\n    }\r\n  }, [ws]);\r\n\r\n  useEffect(() => {\r\n    console.log('Detected devices:', detectedDevices);\r\n    // Make detected devices available globally for the CustomNode component\r\n    window.detectedDevices = detectedDevices;\r\n  }, [detectedDevices]);\r\n\r\n  // Check if there's at least one droplet node in the flowchart\r\n  useEffect(() => {\r\n    const dropletNodeExists = nodes.some(node => node.data.type === 'droplet');\r\n    setHasDropletNode(dropletNodeExists);\r\n    console.log('Droplet node exists:', dropletNodeExists);\r\n  }, [nodes]);\r\n\r\n  const handleNavigate = (newStep) => {\r\n    if (newStep === 7 && !simulationAvailable) {\r\n      console.log('Simulation not available yet. Please create droplets first.');\r\n      setStep(3); // Redirect to droplet creation if available\r\n    } else if ((newStep === 3 || newStep === 4 || newStep === 8) && !hasDropletNode) {\r\n      console.log('No droplet node in flowchart. Please add a droplet node first.');\r\n      setStep(1); // Redirect to flowchart editor\r\n    } else {\r\n      setStep(newStep);\r\n    }\r\n  };\r\n\r\n  const handlePropertyChange = useCallback((nodeId, propertyName, propertyValue) => {\r\n    setNodes((nds) =>\r\n      nds.map((node) =>\r\n        node.id === nodeId\r\n          ? { ...node, data: { ...node.data, [propertyName]: propertyValue } }\r\n          : node\r\n      )\r\n    );\r\n  }, [setNodes]);\r\n\r\n  const handleAddNode = useCallback(({ id, label, type }) => {\r\n    setNodes((nds) => [\r\n      ...nds,\r\n      {\r\n        id,\r\n        type: type,\r\n        label: label,\r\n        position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n        data: {\r\n          label,\r\n          type,\r\n          onPropertyChange: (propertyName, propertyValue) => handlePropertyChange(id, propertyName, propertyValue),\r\n        },\r\n      },\r\n    ]);\r\n  }, [setNodes,handlePropertyChange]);\r\n\r\n  const handleSimulationStart = (createdDroplets) => {\r\n    setDroplets(createdDroplets);\r\n    setSimulationAvailable(true);\r\n    setStep(7);\r\n  };\r\n\r\n  const handleRSMDropletGeneration = (generatedDroplets) => {\r\n    setManualDroplets(generatedDroplets);\r\n    setSimulationAvailable(true);\r\n    setStep(3);\r\n  };\r\n\r\n  const handleInterpolationGeneration = (generatedDroplets) => {\r\n    setManualDroplets(generatedDroplets);\r\n    setSimulationAvailable(true);\r\n    setStep(3); // Go to Manual Droplet Creation instead of simulation\r\n  };\r\n\r\n  const getCarrierPumps = () => {\r\n    return nodes.filter(node => \r\n      node.data.type === 'pump' && \r\n      node.data.carrier === true\r\n    ).map(node => node.id);\r\n  };\r\n\r\n  // Loading components\r\n  const LoadingSimulation = () => (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n      <h2>Loading Simulation...</h2>\r\n    </div>\r\n  );\r\n\r\n  const LoadingDropletCreation = () => (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n      <h2>Loading Droplet Creator...</h2>\r\n    </div>\r\n  );\r\n\r\n  const LoadingRSM = () => (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n      <h2>Loading Response Surface Methodology...</h2>\r\n    </div>\r\n  );\r\n\r\n  const LoadingInterpolation = () => (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n      <h2>Loading Parameter Interpolation...</h2>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ButtonColorSchemeProvider>\r\n      <ButtonStyleProvider>\r\n        <ReactFlowProvider>\r\n          <div style={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\r\n            <NavigationBar \r\n              currentStep={step} \r\n              onNavigate={handleNavigate} \r\n              simulationAvailable={simulationAvailable}\r\n              hasDropletNode={hasDropletNode}\r\n              deviceCount={detectedDevices.length}\r\n            />\r\n            <div style={{ flex: 1, display: 'flex' }}>\r\n              {step === 1 && (\r\n                <div style={{ flex: 1 }}>\r\n                  <FlowchartEditor \r\n                    onAddNode={handleAddNode}\r\n                    nodes={nodes}\r\n                    setNodes={setNodes}\r\n                    edges={edges}\r\n                    setEdges={setEdges}\r\n                    onNodesChange={onNodesChange}\r\n                    onEdgesChange={onEdgesChange}\r\n                    onProceed={() => handleNavigate(3)}\r\n                    onScanDevices={handleScanDevices}\r\n                    detectedDevices={detectedDevices}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {step === 3 && (\r\n                <Suspense fallback={<LoadingDropletCreation />}>\r\n                  <ManualDropletCreation \r\n                    availableParameters={[]}\r\n                    nodes={nodes}\r\n                    setNodes={setNodes}\r\n                    onNext={handleSimulationStart}\r\n                    selectedCarrierPumps={getCarrierPumps()}\r\n                    droplets={manualDroplets}\r\n                    setDroplets={setManualDroplets}\r\n                    parameterRanges={parameterRanges}\r\n                    setParameterRanges={setParameterRanges}\r\n                    parameterVisibility={parameterVisibility}\r\n                    setParameterVisibility={setParameterVisibility}\r\n                  />\r\n                </Suspense>\r\n              )}\r\n              \r\n              {step === 4 && (\r\n                <Suspense fallback={<LoadingRSM />}>\r\n                  <ResponseSurfaceGenerator \r\n                    nodes={nodes}\r\n                    setNodes={setNodes}\r\n                    onNext={handleRSMDropletGeneration}\r\n                    selectedCarrierPumps={getCarrierPumps()}\r\n                  />\r\n                </Suspense>\r\n              )}\r\n              {step === 5 && <ScriptBasedGeneration />}\r\n              {step === 6 && <PlaceholderComponent />}\r\n              {step === 8 && (\r\n                <Suspense fallback={<LoadingInterpolation />}>\r\n                  <InterpolationGenerator\r\n                    nodes={nodes}\r\n                    selectedCarrierPumps={getCarrierPumps()}\r\n                    onNext={handleInterpolationGeneration}\r\n                  />\r\n                </Suspense>\r\n              )}\r\n              {step === 7 && (\r\n                <Suspense fallback={<LoadingSimulation />}>\r\n                  <Simulation \r\n                    nodes={nodes}\r\n                    edges={edges}\r\n                    droplets={droplets}\r\n                    selectedCarrierPumps={getCarrierPumps()}\r\n                  />\r\n                </Suspense>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Dynamic Overlay Components */}\r\n            {overlayComponent && (\r\n              <div style={{\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                zIndex: 9999, // Higher than everything else\r\n                pointerEvents: 'none' // Allow clicking through the container, but not its children\r\n              }}>\r\n                <Suspense fallback={\r\n                  <div style={{\r\n                    position: 'fixed',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    background: 'rgba(0,0,0,0.8)',\r\n                    padding: '20px',\r\n                    borderRadius: '8px',\r\n                    color: 'white',\r\n                    pointerEvents: 'auto'\r\n                  }}>\r\n                    <h2>Loading Component...</h2>\r\n                  </div>\r\n                }>\r\n                  {overlayComponent.type === 'USBSpectrometer' && (\r\n                    <div style={{ pointerEvents: 'auto' }}>\r\n                      <USBSpectrometer {...overlayComponent.props} />\r\n                    </div>\r\n                  )}\r\n                  {overlayComponent.type === 'MQTTSpectrometer' && (\r\n                    <div style={{ pointerEvents: 'auto' }}>\r\n                      <SpectrometerMQTT {...overlayComponent.props} />\r\n                    </div>\r\n                  )}\r\n                  {overlayComponent.type === 'PumpPanel' && (\r\n                    <div style={{ pointerEvents: 'auto' }}>\r\n                      <PumpPanel {...overlayComponent.props} />\r\n                    </div>\r\n                  )}\r\n                </Suspense>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </ReactFlowProvider>\r\n      </ButtonStyleProvider>\r\n    </ButtonColorSchemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,OAAO;AAC/E,SAASC,iBAAiB,EAAEC,aAAa,EAAEC,aAAa,QAAQ,qBAAqB;AACrF,OAAOC,eAAe,MAAM,wCAAwC;AACpE,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,oBAAoB,MAAM,oDAAoD;AACrF,OAAOC,qBAAqB,MAAM,qDAAqD;AACvF,OAAOC,aAAa,MAAM,uCAAuC;AACjE,SAASC,yBAAyB,QAAQ,8BAA8B;AACxE,SAASC,mBAAmB,QAAQ,8BAA8B;AAClE,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,eAAe,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,sBAAsB;AAC1F,OAAOC,eAAe,MAAM,yCAAyC;AACrE,OAAOC,gBAAgB,MAAM,0CAA0C;AACvE,OAAOC,SAAS,MAAM,mCAAmC;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,gBAAGrB,IAAI,CAAAsB,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,oCAAoC,CAAC,CAAC;AAACC,GAAA,GAAtEF,UAAU;AAChB,MAAMG,qBAAqB,gBAAGxB,IAAI,CAAAyB,GAAA,GAACA,CAAA,KAAM,MAAM,CAAC,4DAA4D,CAAC,CAAC;AAACC,GAAA,GAAzGF,qBAAqB;AAC3B,MAAMG,wBAAwB,gBAAG3B,IAAI,CAAA4B,GAAA,GAACA,CAAA,KAAM,MAAM,CAAC,wDAAwD,CAAC,CAAC;AAACC,GAAA,GAAxGF,wBAAwB;AAC9B,MAAMG,sBAAsB,gBAAG9B,IAAI,CAAA+B,GAAA,GAACA,CAAA,KAAM,MAAM,CAAC,sDAAsD,CAAC,CAAC;;AAEzG;AAAAC,GAAA,GAFMF,sBAAsB;AAG5B,MAAMG,SAAS,GAAGC,MAAM,CAACD,SAAS,IAAIC,MAAM,CAACC,YAAY;AAEzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGvC,aAAa,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACwC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGzC,aAAa,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC0C,QAAQ,EAAEC,WAAW,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmD,QAAQ,EAAEC,WAAW,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqD,cAAc,EAAEC,iBAAiB,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACuD,WAAW,EAAEC,cAAc,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyD,eAAe,EAAEC,kBAAkB,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC2D,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5D,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClE,MAAM,CAAC6D,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG9D,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC+D,cAAc,EAAEC,iBAAiB,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACiE,EAAE,EAAEC,KAAK,CAAC,GAAGlE,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAACmE,eAAe,EAAEC,kBAAkB,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAM,CAACqE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtE,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACAE,SAAS,CAAC,MAAM;IACdgB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhB,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACmC,MAAM,CAACkC,YAAY,EAAE;MACxBlC,MAAM,CAACkC,YAAY,GAAG;QACpBC,gBAAgB,EAAGC,IAAI,IAAK;UAC1BC,OAAO,CAACC,GAAG,CAAC,kEAAkE,CAAC;QACjF,CAAC;QACDC,sBAAsB,EAAGC,OAAO,IAAK;UACnCxC,MAAM,CAACkC,YAAY,CAACC,gBAAgB,GAAGK,OAAO;UAC9CH,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;QAChD,CAAC;QACDG,QAAQ,EAAGL,IAAI,IAAK;UAClBC,OAAO,CAACC,GAAG,CAAC,0DAA0D,CAAC;QACzE,CAAC;QACDI,cAAc,EAAGF,OAAO,IAAK;UAC3BxC,MAAM,CAACkC,YAAY,CAACO,QAAQ,GAAGD,OAAO;UACtCH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACxC;MACF,CAAC;IACH;;IAEA;IACA,MAAMK,oBAAoB,GAAIC,QAAQ,IAAK;MACzCP,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEM,QAAQ,CAAC;MACxEP,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEM,QAAQ,CAACC,QAAQ,CAAC;;MAE3D;MACA,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;QACnC,MAAMC,QAAQ,GAAG,EAAE;QACnB,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;;QAEtB;QACA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;UAC5B,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACH,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG;UAC9C,MAAMI,KAAK,GAAGF,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,GAAG;UAEjCR,QAAQ,CAACS,IAAI,CAAC;YACZC,KAAK,EAAEN,SAAS,GAAGG,KAAK;YACxBI,SAAS,EAAEV,GAAG,GAAG,CAAC,GAAG,GAAGE,CAAC,IAAI;UAC/B,CAAC,CAAC;QACJ;QAEA,OAAOH,QAAQ;MACjB,CAAC;;MAED;MACAd,mBAAmB,CAAC;QAClB0B,IAAI,EAAEf,QAAQ,CAACe,IAAI,KAAK,kBAAkB,GAAG,kBAAkB,GAAG,iBAAiB;QACnFC,KAAK,EAAE;UACLC,QAAQ,EAAEjB,QAAQ;UAClBG,QAAQ,EAAED,sBAAsB,CAAC,CAAC;UAClCgB,OAAO,EAAEA,CAAA,KAAM7B,mBAAmB,CAAC,IAAI,CAAC;UACxC8B,eAAe,EAAE;YAAEC,CAAC,EAAE,EAAE;YAAEC,CAAC,EAAE;UAAI,CAAC;UAClCC,UAAU,EAAEtB,QAAQ,CAACC,QAAQ,CAAC;QAChC;MACF,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,MAAMsB,YAAY,GAAIvB,QAAQ,IAAK;MACjCP,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEM,QAAQ,CAAC;;MAE/D;MACAX,mBAAmB,CAAC;QAClB0B,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE;UACLQ,IAAI,EAAExB,QAAQ;UACdtC,KAAK,EAAEA,KAAK;UACZG,KAAK,EAAEA,KAAK;UACZqD,OAAO,EAAEA,CAAA,KAAM7B,mBAAmB,CAAC,IAAI,CAAC;UACxC8B,eAAe,EAAE;YAAEC,CAAC,EAAE,GAAG;YAAEC,CAAC,EAAE;UAAI,CAAC;UACnCI,QAAQ,EAAGC,MAAM,IAAK;YACpBjC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEgC,MAAM,CAAC;YAC7C;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC;;IAED;IACAtE,MAAM,CAACkC,YAAY,CAACK,sBAAsB,CAACI,oBAAoB,CAAC;IAChE3C,MAAM,CAACkC,YAAY,CAACQ,cAAc,CAACyB,YAAY,CAAC;;IAEhD;IACA,OAAO,MAAM;MACX,IAAInE,MAAM,CAACkC,YAAY,EAAE;QACvBlC,MAAM,CAACkC,YAAY,CAACK,sBAAsB,CAAC,MAAM;UAC/CF,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;QACpE,CAAC,CAAC;QACFtC,MAAM,CAACkC,YAAY,CAACQ,cAAc,CAAC,MAAM;UACvCL,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;QAC5D,CAAC,CAAC;MACJ;IACF,CAAC;EACH,CAAC,EAAE,CAAChC,KAAK,EAAEG,KAAK,CAAC,CAAC;EAElB5C,SAAS,CAAC,MAAM;IACd;IACA,MAAM0G,OAAO,GAAG5F,eAAe,CAACD,MAAM,EAAE;MACtC8F,MAAM,EAAGC,SAAS,IAAK;QACrBpC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5CT,KAAK,CAAC4C,SAAS,CAAC;QAChBzE,MAAM,CAAC0E,YAAY,GAAGD,SAAS,CAAC,CAAC;;QAEjC;QACA,MAAME,WAAW,GAAG;UAClBC,KAAK,EAAE,oBAAoB;UAC3BC,OAAO,EAAE,CAAC;QACZ,CAAC;QAEDJ,SAAS,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAACL,WAAW,CAAC,CAAC;QAC3CtC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;;QAElD;QACAP,kBAAkB,CAAC,EAAE,CAAC;MACxB,CAAC;MACDkD,SAAS,EAAGC,IAAI,IAAK;QACnB;QACA,IAAIA,IAAI,CAACN,KAAK,KAAK,wBAAwB,EAAE;UAC3C,MAAMO,UAAU,GAAGvG,eAAe,CAACsG,IAAI,CAACL,OAAO,CAAC;UAEhD,IAAIM,UAAU,EAAE;YACdpD,kBAAkB,CAACqD,IAAI,IAAI;cACzB;cACA,MAAMC,MAAM,GAAGD,IAAI,CAACE,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAC1C,QAAQ,KAAKsC,UAAU,CAACtC,QAAQ,CAAC;cAC3E,IAAI,CAACwC,MAAM,EAAE;gBACXhD,OAAO,CAACC,GAAG,CAAC,wBAAwB6C,UAAU,CAACtC,QAAQ,KAAKsC,UAAU,CAACxB,IAAI,GAAG,CAAC;gBAC/E,OAAO,CAAC,GAAGyB,IAAI,EAAED,UAAU,CAAC;cAC9B;cACA,OAAOC,IAAI;YACb,CAAC,CAAC;UACJ;QACF;MACF,CAAC;MACDI,OAAO,EAAGC,KAAK,IAAK;QAClBpD,OAAO,CAACoD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXlB,OAAO,CAAC,CAAC;IACX,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BrD,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1CD,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEV,EAAE,GAAGA,EAAE,CAAC+D,UAAU,GAAG,cAAc,CAAC;IAEpE,IAAI/D,EAAE,IAAIA,EAAE,CAAC+D,UAAU,KAAK5F,SAAS,CAAC6F,IAAI,EAAE;MAC1C;MACA7D,kBAAkB,CAAC,EAAE,CAAC;MACtBM,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;;MAE1C;MACA,MAAMqC,WAAW,GAAG;QAClBC,KAAK,EAAE,oBAAoB;QAC3BC,OAAO,EAAE,CAAC;MACZ,CAAC;MAEDjD,EAAE,CAACkD,IAAI,CAACC,IAAI,CAACC,SAAS,CAACL,WAAW,CAAC,CAAC;MACpCtC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IAC1D,CAAC,MAAM;MACLD,OAAO,CAACoD,KAAK,CAAC,sDAAsD,CAAC;IACvE;EACF,CAAC;EAED5H,SAAS,CAAC,MAAM;IACdwE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEhC,KAAK,CAAC;EAChD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEXzC,SAAS,CAAC,MAAM;IACd;IACA,IAAI+D,EAAE,EAAE;MACNS,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEV,EAAE,CAAC+D,UAAU,CAAC;IACnE;EACF,CAAC,EAAE,CAAC/D,EAAE,CAAC,CAAC;EAER/D,SAAS,CAAC,MAAM;IACdwE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAER,eAAe,CAAC;IACjD;IACA9B,MAAM,CAAC8B,eAAe,GAAGA,eAAe;EAC1C,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;;EAErB;EACAjE,SAAS,CAAC,MAAM;IACd,MAAMgI,iBAAiB,GAAGvF,KAAK,CAACgF,IAAI,CAAClD,IAAI,IAAIA,IAAI,CAAC8C,IAAI,CAACvB,IAAI,KAAK,SAAS,CAAC;IAC1EhC,iBAAiB,CAACkE,iBAAiB,CAAC;IACpCxD,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEuD,iBAAiB,CAAC;EACxD,CAAC,EAAE,CAACvF,KAAK,CAAC,CAAC;EAEX,MAAMwF,cAAc,GAAIC,OAAO,IAAK;IAClC,IAAIA,OAAO,KAAK,CAAC,IAAI,CAACvE,mBAAmB,EAAE;MACzCa,OAAO,CAACC,GAAG,CAAC,6DAA6D,CAAC;MAC1EjC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,MAAM,IAAI,CAAC0F,OAAO,KAAK,CAAC,IAAIA,OAAO,KAAK,CAAC,IAAIA,OAAO,KAAK,CAAC,KAAK,CAACrE,cAAc,EAAE;MAC/EW,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;MAC7EjC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,MAAM;MACLA,OAAO,CAAC0F,OAAO,CAAC;IAClB;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAGpI,WAAW,CAAC,CAACqI,MAAM,EAAEC,YAAY,EAAEC,aAAa,KAAK;IAChF5F,QAAQ,CAAE6F,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEjE,IAAI,IACXA,IAAI,CAACkE,EAAE,KAAKL,MAAM,GACd;MAAE,GAAG7D,IAAI;MAAE8C,IAAI,EAAE;QAAE,GAAG9C,IAAI,CAAC8C,IAAI;QAAE,CAACgB,YAAY,GAAGC;MAAc;IAAE,CAAC,GAClE/D,IACN,CACF,CAAC;EACH,CAAC,EAAE,CAAC7B,QAAQ,CAAC,CAAC;EAEd,MAAMgG,aAAa,GAAG3I,WAAW,CAAC,CAAC;IAAE0I,EAAE;IAAEE,KAAK;IAAE7C;EAAK,CAAC,KAAK;IACzDpD,QAAQ,CAAE6F,GAAG,IAAK,CAChB,GAAGA,GAAG,EACN;MACEE,EAAE;MACF3C,IAAI,EAAEA,IAAI;MACV6C,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAE;QAAEzC,CAAC,EAAEZ,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,GAAG;QAAEU,CAAC,EAAEb,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG;MAAI,CAAC;MAC5D2B,IAAI,EAAE;QACJsB,KAAK;QACL7C,IAAI;QACJ+C,gBAAgB,EAAEA,CAACR,YAAY,EAAEC,aAAa,KAAKH,oBAAoB,CAACM,EAAE,EAAEJ,YAAY,EAAEC,aAAa;MACzG;IACF,CAAC,CACF,CAAC;EACJ,CAAC,EAAE,CAAC5F,QAAQ,EAACyF,oBAAoB,CAAC,CAAC;EAEnC,MAAMW,qBAAqB,GAAIC,eAAe,IAAK;IACjD7F,WAAW,CAAC6F,eAAe,CAAC;IAC5BnF,sBAAsB,CAAC,IAAI,CAAC;IAC5BpB,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMwG,0BAA0B,GAAIC,iBAAiB,IAAK;IACxD7F,iBAAiB,CAAC6F,iBAAiB,CAAC;IACpCrF,sBAAsB,CAAC,IAAI,CAAC;IAC5BpB,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAM0G,6BAA6B,GAAID,iBAAiB,IAAK;IAC3D7F,iBAAiB,CAAC6F,iBAAiB,CAAC;IACpCrF,sBAAsB,CAAC,IAAI,CAAC;IAC5BpB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC;EAED,MAAM2G,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAO1G,KAAK,CAAC2G,MAAM,CAAC7E,IAAI,IACtBA,IAAI,CAAC8C,IAAI,CAACvB,IAAI,KAAK,MAAM,IACzBvB,IAAI,CAAC8C,IAAI,CAACgC,OAAO,KAAK,IACxB,CAAC,CAACb,GAAG,CAACjE,IAAI,IAAIA,IAAI,CAACkE,EAAE,CAAC;EACxB,CAAC;;EAED;EACA,MAAMa,iBAAiB,GAAGA,CAAA,kBACxBjI,OAAA;IAAKkI,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC9FvI,OAAA;MAAAuI,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CACN;EAED,MAAMC,sBAAsB,GAAGA,CAAA,kBAC7B5I,OAAA;IAAKkI,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC9FvI,OAAA;MAAAuI,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CACN;EAED,MAAME,UAAU,GAAGA,CAAA,kBACjB7I,OAAA;IAAKkI,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC9FvI,OAAA;MAAAuI,QAAA,EAAI;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CACN;EAED,MAAMG,oBAAoB,GAAGA,CAAA,kBAC3B9I,OAAA;IAAKkI,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC9FvI,OAAA;MAAAuI,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CACN;EAED,oBACE3I,OAAA,CAACV,yBAAyB;IAAAiJ,QAAA,eACxBvI,OAAA,CAACT,mBAAmB;MAAAgJ,QAAA,eAClBvI,OAAA,CAAClB,iBAAiB;QAAAyJ,QAAA,eAChBvI,OAAA;UAAKkI,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEY,aAAa,EAAE,QAAQ;YAAET,MAAM,EAAE;UAAQ,CAAE;UAAAC,QAAA,gBACxEvI,OAAA,CAACX,aAAa;YACZ2J,WAAW,EAAE9H,IAAK;YAClB+H,UAAU,EAAErC,cAAe;YAC3BtE,mBAAmB,EAAEA,mBAAoB;YACzCE,cAAc,EAAEA,cAAe;YAC/B0G,WAAW,EAAEtG,eAAe,CAACuG;UAAO;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACF3I,OAAA;YAAKkI,KAAK,EAAE;cAAEkB,IAAI,EAAE,CAAC;cAAEjB,OAAO,EAAE;YAAO,CAAE;YAAAI,QAAA,GACtCrH,IAAI,KAAK,CAAC,iBACTlB,OAAA;cAAKkI,KAAK,EAAE;gBAAEkB,IAAI,EAAE;cAAE,CAAE;cAAAb,QAAA,eACtBvI,OAAA,CAACf,eAAe;gBACdoK,SAAS,EAAEhC,aAAc;gBACzBjG,KAAK,EAAEA,KAAM;gBACbC,QAAQ,EAAEA,QAAS;gBACnBE,KAAK,EAAEA,KAAM;gBACbC,QAAQ,EAAEA,QAAS;gBACnBF,aAAa,EAAEA,aAAc;gBAC7BG,aAAa,EAAEA,aAAc;gBAC7B6H,SAAS,EAAEA,CAAA,KAAM1C,cAAc,CAAC,CAAC,CAAE;gBACnC2C,aAAa,EAAE/C,iBAAkB;gBACjC5D,eAAe,EAAEA;cAAgB;gBAAA4F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN,EAEAzH,IAAI,KAAK,CAAC,iBACTlB,OAAA,CAACnB,QAAQ;cAAC2K,QAAQ,eAAExJ,OAAA,CAAC4I,sBAAsB;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAAAJ,QAAA,eAC7CvI,OAAA,CAACI,qBAAqB;gBACpBqJ,mBAAmB,EAAE,EAAG;gBACxBrI,KAAK,EAAEA,KAAM;gBACbC,QAAQ,EAAEA,QAAS;gBACnBqI,MAAM,EAAEjC,qBAAsB;gBAC9BkC,oBAAoB,EAAE7B,eAAe,CAAC,CAAE;gBACxClG,QAAQ,EAAEE,cAAe;gBACzBD,WAAW,EAAEE,iBAAkB;gBAC/BG,eAAe,EAAEA,eAAgB;gBACjCC,kBAAkB,EAAEA,kBAAmB;gBACvCC,mBAAmB,EAAEA,mBAAoB;gBACzCC,sBAAsB,EAAEA;cAAuB;gBAAAmG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CACX,EAEAzH,IAAI,KAAK,CAAC,iBACTlB,OAAA,CAACnB,QAAQ;cAAC2K,QAAQ,eAAExJ,OAAA,CAAC6I,UAAU;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAAAJ,QAAA,eACjCvI,OAAA,CAACO,wBAAwB;gBACvBa,KAAK,EAAEA,KAAM;gBACbC,QAAQ,EAAEA,QAAS;gBACnBqI,MAAM,EAAE/B,0BAA2B;gBACnCgC,oBAAoB,EAAE7B,eAAe,CAAC;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CACX,EACAzH,IAAI,KAAK,CAAC,iBAAIlB,OAAA,CAACZ,qBAAqB;cAAAoJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACvCzH,IAAI,KAAK,CAAC,iBAAIlB,OAAA,CAACb,oBAAoB;cAAAqJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACtCzH,IAAI,KAAK,CAAC,iBACTlB,OAAA,CAACnB,QAAQ;cAAC2K,QAAQ,eAAExJ,OAAA,CAAC8I,oBAAoB;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAAAJ,QAAA,eAC3CvI,OAAA,CAACU,sBAAsB;gBACrBU,KAAK,EAAEA,KAAM;gBACbuI,oBAAoB,EAAE7B,eAAe,CAAC,CAAE;gBACxC4B,MAAM,EAAE7B;cAA8B;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CACX,EACAzH,IAAI,KAAK,CAAC,iBACTlB,OAAA,CAACnB,QAAQ;cAAC2K,QAAQ,eAAExJ,OAAA,CAACiI,iBAAiB;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAAAJ,QAAA,eACxCvI,OAAA,CAACC,UAAU;gBACTmB,KAAK,EAAEA,KAAM;gBACbG,KAAK,EAAEA,KAAM;gBACbK,QAAQ,EAAEA,QAAS;gBACnB+H,oBAAoB,EAAE7B,eAAe,CAAC;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CACX;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EAGL7F,gBAAgB,iBACf9C,OAAA;YAAKkI,KAAK,EAAE;cACVX,QAAQ,EAAE,OAAO;cACjBqC,GAAG,EAAE,CAAC;cACNC,IAAI,EAAE,CAAC;cACPC,KAAK,EAAE,CAAC;cACRC,MAAM,EAAE,CAAC;cACTC,MAAM,EAAE,IAAI;cAAE;cACdC,aAAa,EAAE,MAAM,CAAC;YACxB,CAAE;YAAA1B,QAAA,eACAvI,OAAA,CAACnB,QAAQ;cAAC2K,QAAQ,eAChBxJ,OAAA;gBAAKkI,KAAK,EAAE;kBACVX,QAAQ,EAAE,OAAO;kBACjBqC,GAAG,EAAE,KAAK;kBACVC,IAAI,EAAE,KAAK;kBACXK,SAAS,EAAE,uBAAuB;kBAClCC,UAAU,EAAE,iBAAiB;kBAC7BC,OAAO,EAAE,MAAM;kBACfC,YAAY,EAAE,KAAK;kBACnBC,KAAK,EAAE,OAAO;kBACdL,aAAa,EAAE;gBACjB,CAAE;gBAAA1B,QAAA,eACAvI,OAAA;kBAAAuI,QAAA,EAAI;gBAAoB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CACN;cAAAJ,QAAA,GACEzF,gBAAgB,CAAC2B,IAAI,KAAK,iBAAiB,iBAC1CzE,OAAA;gBAAKkI,KAAK,EAAE;kBAAE+B,aAAa,EAAE;gBAAO,CAAE;gBAAA1B,QAAA,eACpCvI,OAAA,CAACJ,eAAe;kBAAA,GAAKkD,gBAAgB,CAAC4B;gBAAK;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CACN,EACA7F,gBAAgB,CAAC2B,IAAI,KAAK,kBAAkB,iBAC3CzE,OAAA;gBAAKkI,KAAK,EAAE;kBAAE+B,aAAa,EAAE;gBAAO,CAAE;gBAAA1B,QAAA,eACpCvI,OAAA,CAACH,gBAAgB;kBAAA,GAAKiD,gBAAgB,CAAC4B;gBAAK;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C,CACN,EACA7F,gBAAgB,CAAC2B,IAAI,KAAK,WAAW,iBACpCzE,OAAA;gBAAKkI,KAAK,EAAE;kBAAE+B,aAAa,EAAE;gBAAO,CAAE;gBAAA1B,QAAA,eACpCvI,OAAA,CAACF,SAAS;kBAAA,GAAKgD,gBAAgB,CAAC4B;gBAAK;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhC,CAAC;AAAC1H,EAAA,CAlbID,GAAG;EAAA,QAEkCjC,aAAa,EACbC,aAAa;AAAA;AAAAuL,GAAA,GAHlDvJ,GAAG;AAobT,eAAeA,GAAG;AAAC,IAAAd,EAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAA2J,GAAA;AAAAC,YAAA,CAAAtK,EAAA;AAAAsK,YAAA,CAAArK,GAAA;AAAAqK,YAAA,CAAAnK,GAAA;AAAAmK,YAAA,CAAAlK,GAAA;AAAAkK,YAAA,CAAAhK,GAAA;AAAAgK,YAAA,CAAA/J,GAAA;AAAA+J,YAAA,CAAA7J,GAAA;AAAA6J,YAAA,CAAA5J,GAAA;AAAA4J,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}