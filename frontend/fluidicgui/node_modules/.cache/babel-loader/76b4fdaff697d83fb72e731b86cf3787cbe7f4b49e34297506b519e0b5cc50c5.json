{"ast":null,"code":"var _jsxFileName = \"E:\\\\flow chemistry\\\\fluidicGUI\\\\frontend\\\\fluidicgui\\\\src\\\\components\\\\Navigation\\\\NavigationBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useButtonColorScheme, buttonColorSchemeOptions, ColorSchemePreview } from '../../context/ColorSchemeContext';\nimport { useButtonStyles } from '../../styles/ButtonStyleProvider';\nimport Settings from '../Settings/Settings';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavigationBar = ({\n  currentStep,\n  onNavigate,\n  simulationAvailable = false,\n  hasDropletNode = false\n}) => {\n  _s();\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [colorMenuOpen, setColorMenuOpen] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const menuRef = useRef(null);\n  const colorMenuRef = useRef(null);\n  const {\n    buttonColorScheme,\n    updateButtonColorScheme\n  } = useButtonColorScheme();\n\n  // Get dynamic button styles\n  const buttonVariants = useButtonStyles();\n  const styles = {\n    navbar: {\n      display: 'flex',\n      backgroundColor: '#333',\n      padding: '10px',\n      gap: '10px',\n      borderBottom: '2px solid #555',\n      position: 'sticky',\n      top: 0,\n      zIndex: 1000\n    },\n    plusButton: {\n      ...buttonVariants.secondaryButton,\n      width: '40px',\n      fontSize: '16px',\n      fontWeight: 'bold',\n      position: 'relative'\n    },\n    colorButton: {\n      ...buttonVariants.secondaryButton,\n      marginLeft: 'auto',\n      display: 'flex',\n      alignItems: 'center',\n      gap: '8px',\n      position: 'relative'\n    },\n    contextMenu: {\n      position: 'absolute',\n      top: '100%',\n      left: '0',\n      backgroundColor: '#444',\n      borderRadius: '4px',\n      boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',\n      width: '250px',\n      zIndex: 1001,\n      display: menuOpen ? 'block' : 'none'\n    },\n    colorMenu: {\n      position: 'absolute',\n      top: '100%',\n      right: '0',\n      backgroundColor: '#444',\n      borderRadius: '4px',\n      boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',\n      width: '250px',\n      zIndex: 1001,\n      display: colorMenuOpen ? 'block' : 'none',\n      padding: '10px'\n    },\n    menuItem: {\n      padding: '10px 15px',\n      cursor: 'pointer',\n      borderBottom: '1px solid #555',\n      transition: 'background-color 0.2s',\n      '&:hover': {\n        backgroundColor: '#555'\n      },\n      '&:last-child': {\n        borderBottom: 'none'\n      }\n    },\n    colorMenuItem: {\n      padding: '10px 8px',\n      cursor: 'pointer',\n      display: 'flex',\n      alignItems: 'center',\n      gap: '8px',\n      borderBottom: '1px solid #555',\n      '&:last-child': {\n        borderBottom: 'none'\n      }\n    },\n    previewContainer: {\n      flex: 1\n    },\n    colorIcon: {\n      width: '20px',\n      height: '20px',\n      borderRadius: '3px',\n      display: 'inline-block'\n    }\n  };\n\n  // Close menus when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(false);\n      }\n      if (colorMenuRef.current && !colorMenuRef.current.contains(event.target)) {\n        setColorMenuOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const buttons = [{\n    step: 1,\n    label: 'Flowchart Editor'\n  }, {\n    step: 3,\n    label: 'Droplet Creator',\n    requiresDropletNode: true\n  }, {\n    step: 7,\n    label: 'Simulation',\n    requiresAvailability: true\n  }];\n  const handleMenuItemClick = menuStep => {\n    onNavigate(menuStep);\n    setMenuOpen(false);\n  };\n  const handleColorSchemeChange = scheme => {\n    updateButtonColorScheme(scheme);\n    setColorMenuOpen(false);\n  };\n\n  // Helper to get background color for color icon based on scheme\n  const getColorIconStyle = scheme => {\n    switch (scheme) {\n      case 'viridis':\n        return {\n          backgroundColor: 'rgb(33, 144, 141)'\n        };\n      case 'plasma':\n        return {\n          backgroundColor: 'rgb(156, 71, 155)'\n        };\n      case 'inferno':\n        return {\n          backgroundColor: 'rgb(220, 40, 39)'\n        };\n      case 'cividis':\n        return {\n          backgroundColor: 'rgb(97, 185, 144)'\n        };\n      case 'turbo':\n        return {\n          backgroundColor: 'rgb(82, 229, 46)'\n        };\n      default:\n        return {\n          backgroundColor: 'rgb(97, 185, 144)'\n        };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onNavigate(buttons[0].step),\n        style: {\n          ...buttonVariants.secondaryButton,\n          ...(currentStep === buttons[0].step ? {\n            backgroundColor: '#555',\n            border: '1px solid #8c8',\n            boxShadow: '0 0 5px #8c8'\n          } : {})\n        },\n        disabled: currentStep === buttons[0].step,\n        children: buttons[0].label\n      }, buttons[0].step, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), hasDropletNode && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: menuRef,\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.plusButton,\n          onClick: () => setMenuOpen(!menuOpen),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.contextMenu,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.menuItem,\n            onClick: () => handleMenuItemClick(4) // Using step 4 for Response Surface Methodology\n            ,\n            children: \"Response surface methodology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.menuItem,\n            onClick: () => handleMenuItemClick(8) // Using step 8 for Interpolation Generator\n            ,\n            children: \"Parameter Interpolation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), buttons.slice(1).map(({\n        step,\n        label,\n        requiresAvailability,\n        requiresDropletNode\n      }) => {\n        // Check both conditions: availability and droplet node existence\n        const shouldShow = (!requiresAvailability || simulationAvailable) && (!requiresDropletNode || hasDropletNode);\n        return shouldShow && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onNavigate(step),\n          style: {\n            ...buttonVariants.secondaryButton,\n            ...(currentStep === step ? {\n              backgroundColor: '#555',\n              border: '1px solid #8c8',\n              boxShadow: '0 0 5px #8c8'\n            } : {})\n          },\n          disabled: currentStep === step,\n          children: label\n        }, step, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: colorMenuRef,\n        style: {\n          position: 'relative',\n          marginLeft: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.colorButton,\n          onClick: () => setColorMenuOpen(!colorMenuOpen),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Button Colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.colorIcon,\n              ...getColorIconStyle(buttonColorScheme)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.colorMenu,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '14px',\n              marginBottom: '10px',\n              fontWeight: 'bold'\n            },\n            children: \"Select Button Color Scheme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), Object.entries(buttonColorSchemeOptions).map(([key, label]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.colorMenuItem,\n              backgroundColor: key === buttonColorScheme ? '#555' : 'transparent'\n            },\n            onClick: () => handleColorSchemeChange(key),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.previewContainer,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ColorSchemePreview, {\n                scheme: key,\n                width: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), key === buttonColorScheme && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...buttonVariants.secondaryButton,\n          marginLeft: '10px'\n        },\n        onClick: () => setSettingsOpen(true),\n        children: \"\\u2699\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Settings, {\n      isOpen: settingsOpen,\n      onClose: () => setSettingsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NavigationBar, \"KUP1NSaEL6+WbidxrYSM5JlqVog=\", false, function () {\n  return [useButtonColorScheme, useButtonStyles];\n});\n_c = NavigationBar;\nexport default NavigationBar;\nvar _c;\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useButtonColorScheme","buttonColorSchemeOptions","ColorSchemePreview","useButtonStyles","Settings","jsxDEV","_jsxDEV","Fragment","_Fragment","NavigationBar","currentStep","onNavigate","simulationAvailable","hasDropletNode","_s","menuOpen","setMenuOpen","colorMenuOpen","setColorMenuOpen","settingsOpen","setSettingsOpen","menuRef","colorMenuRef","buttonColorScheme","updateButtonColorScheme","buttonVariants","styles","navbar","display","backgroundColor","padding","gap","borderBottom","position","top","zIndex","plusButton","secondaryButton","width","fontSize","fontWeight","colorButton","marginLeft","alignItems","contextMenu","left","borderRadius","boxShadow","colorMenu","right","menuItem","cursor","transition","colorMenuItem","previewContainer","flex","colorIcon","height","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","buttons","step","label","requiresDropletNode","requiresAvailability","handleMenuItemClick","menuStep","handleColorSchemeChange","scheme","getColorIconStyle","children","style","onClick","border","disabled","fileName","_jsxFileName","lineNumber","columnNumber","ref","slice","map","shouldShow","marginBottom","Object","entries","key","isOpen","onClose","_c","$RefreshReg$"],"sources":["E:/flow chemistry/fluidicGUI/frontend/fluidicgui/src/components/Navigation/NavigationBar.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useButtonColorScheme, buttonColorSchemeOptions, ColorSchemePreview } from '../../context/ColorSchemeContext';\r\nimport { useButtonStyles } from '../../styles/ButtonStyleProvider';\r\nimport Settings from '../Settings/Settings';\r\n\r\nconst NavigationBar = ({ currentStep, onNavigate, simulationAvailable = false, hasDropletNode = false }) => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [colorMenuOpen, setColorMenuOpen] = useState(false);\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n  const menuRef = useRef(null);\r\n  const colorMenuRef = useRef(null);\r\n  const { buttonColorScheme, updateButtonColorScheme } = useButtonColorScheme();\r\n  \r\n  // Get dynamic button styles\r\n  const buttonVariants = useButtonStyles();\r\n\r\n  const styles = {\r\n    navbar: {\r\n      display: 'flex',\r\n      backgroundColor: '#333',\r\n      padding: '10px',\r\n      gap: '10px',\r\n      borderBottom: '2px solid #555',\r\n      position: 'sticky',\r\n      top: 0,\r\n      zIndex: 1000\r\n    },\r\n    plusButton: {\r\n      ...buttonVariants.secondaryButton,\r\n      width: '40px',\r\n      fontSize: '16px',\r\n      fontWeight: 'bold',\r\n      position: 'relative'\r\n    },\r\n    colorButton: {\r\n      ...buttonVariants.secondaryButton,\r\n      marginLeft: 'auto',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      gap: '8px',\r\n      position: 'relative'\r\n    },\r\n    contextMenu: {\r\n      position: 'absolute',\r\n      top: '100%',\r\n      left: '0',\r\n      backgroundColor: '#444',\r\n      borderRadius: '4px',\r\n      boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',\r\n      width: '250px',\r\n      zIndex: 1001,\r\n      display: menuOpen ? 'block' : 'none'\r\n    },\r\n    colorMenu: {\r\n      position: 'absolute',\r\n      top: '100%',\r\n      right: '0',\r\n      backgroundColor: '#444',\r\n      borderRadius: '4px',\r\n      boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',\r\n      width: '250px',\r\n      zIndex: 1001,\r\n      display: colorMenuOpen ? 'block' : 'none',\r\n      padding: '10px'\r\n    },\r\n    menuItem: {\r\n      padding: '10px 15px',\r\n      cursor: 'pointer',\r\n      borderBottom: '1px solid #555',\r\n      transition: 'background-color 0.2s',\r\n      '&:hover': {\r\n        backgroundColor: '#555'\r\n      },\r\n      '&:last-child': {\r\n        borderBottom: 'none'\r\n      }\r\n    },\r\n    colorMenuItem: {\r\n      padding: '10px 8px',\r\n      cursor: 'pointer',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      gap: '8px',\r\n      borderBottom: '1px solid #555',\r\n      '&:last-child': {\r\n        borderBottom: 'none'\r\n      }\r\n    },\r\n    previewContainer: {\r\n      flex: 1\r\n    },\r\n    colorIcon: {\r\n      width: '20px',\r\n      height: '20px',\r\n      borderRadius: '3px',\r\n      display: 'inline-block'\r\n    }\r\n  };\r\n\r\n  // Close menus when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        setMenuOpen(false);\r\n      }\r\n      if (colorMenuRef.current && !colorMenuRef.current.contains(event.target)) {\r\n        setColorMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const buttons = [\r\n    { step: 1, label: 'Flowchart Editor' },\r\n    { step: 3, label: 'Droplet Creator', requiresDropletNode: true },\r\n    { step: 7, label: 'Simulation', requiresAvailability: true }\r\n  ];\r\n\r\n  const handleMenuItemClick = (menuStep) => {\r\n    onNavigate(menuStep);\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  const handleColorSchemeChange = (scheme) => {\r\n    updateButtonColorScheme(scheme);\r\n    setColorMenuOpen(false);\r\n  };\r\n\r\n  // Helper to get background color for color icon based on scheme\r\n  const getColorIconStyle = (scheme) => {\r\n    switch(scheme) {\r\n      case 'viridis': return { backgroundColor: 'rgb(33, 144, 141)' };\r\n      case 'plasma': return { backgroundColor: 'rgb(156, 71, 155)' };\r\n      case 'inferno': return { backgroundColor: 'rgb(220, 40, 39)' };\r\n      case 'cividis': return { backgroundColor: 'rgb(97, 185, 144)' };\r\n      case 'turbo': return { backgroundColor: 'rgb(82, 229, 46)' };\r\n      default: return { backgroundColor: 'rgb(97, 185, 144)' };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={styles.navbar}>\r\n        {/* First button - Flowchart Editor is always visible */}\r\n        <button\r\n          key={buttons[0].step}\r\n          onClick={() => onNavigate(buttons[0].step)}\r\n          style={{\r\n            ...buttonVariants.secondaryButton,\r\n            ...(currentStep === buttons[0].step ? {\r\n              backgroundColor: '#555',\r\n              border: '1px solid #8c8',\r\n              boxShadow: '0 0 5px #8c8'\r\n            } : {})\r\n          }}\r\n          disabled={currentStep === buttons[0].step}\r\n        >\r\n          {buttons[0].label}\r\n        </button>\r\n\r\n        {/* Plus button with dropdown - only visible when droplet node exists */}\r\n        {hasDropletNode && (\r\n          <div ref={menuRef} style={{ position: 'relative' }}>\r\n            <button \r\n              style={styles.plusButton}\r\n              onClick={() => setMenuOpen(!menuOpen)}\r\n            >\r\n              +\r\n            </button>\r\n            <div style={styles.contextMenu}>\r\n              <div \r\n                style={styles.menuItem} \r\n                onClick={() => handleMenuItemClick(4)} // Using step 4 for Response Surface Methodology\r\n              >\r\n                Response surface methodology\r\n              </div>\r\n              <div \r\n                style={styles.menuItem} \r\n                onClick={() => handleMenuItemClick(8)} // Using step 8 for Interpolation Generator\r\n              >\r\n                Parameter Interpolation\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Remaining buttons */}\r\n        {buttons.slice(1).map(({ step, label, requiresAvailability, requiresDropletNode }) => {\r\n          // Check both conditions: availability and droplet node existence\r\n          const shouldShow = \r\n            (!requiresAvailability || simulationAvailable) && \r\n            (!requiresDropletNode || hasDropletNode);\r\n          \r\n          return shouldShow && (\r\n            <button\r\n              key={step}\r\n              onClick={() => onNavigate(step)}\r\n              style={{\r\n                ...buttonVariants.secondaryButton,\r\n                ...(currentStep === step ? {\r\n                  backgroundColor: '#555',\r\n                  border: '1px solid #8c8',\r\n                  boxShadow: '0 0 5px #8c8'\r\n                } : {})\r\n              }}\r\n              disabled={currentStep === step}\r\n            >\r\n              {label}\r\n            </button>\r\n          );\r\n        })}\r\n\r\n        {/* Color scheme button with dropdown */}\r\n        <div ref={colorMenuRef} style={{ position: 'relative', marginLeft: 'auto' }}>\r\n          <button \r\n            style={styles.colorButton}\r\n            onClick={() => setColorMenuOpen(!colorMenuOpen)}\r\n          >\r\n            <span>Button Colors</span>\r\n            <div style={{...styles.colorIcon, ...getColorIconStyle(buttonColorScheme)}}></div>\r\n          </button>\r\n          <div style={styles.colorMenu}>\r\n            <div style={{ fontSize: '14px', marginBottom: '10px', fontWeight: 'bold' }}>\r\n              Select Button Color Scheme\r\n            </div>\r\n            \r\n            {Object.entries(buttonColorSchemeOptions).map(([key, label]) => (\r\n              <div \r\n                key={key}\r\n                style={{\r\n                  ...styles.colorMenuItem,\r\n                  backgroundColor: key === buttonColorScheme ? '#555' : 'transparent'\r\n                }}\r\n                onClick={() => handleColorSchemeChange(key)}\r\n              >\r\n                <div style={styles.previewContainer}>\r\n                  <div>{label}</div>\r\n                  <ColorSchemePreview scheme={key} width=\"100%\" />\r\n                </div>\r\n                {key === buttonColorScheme && (\r\n                  <span>✓</span>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Settings button */}\r\n        <button\r\n          style={{\r\n            ...buttonVariants.secondaryButton,\r\n            marginLeft: '10px',\r\n          }}\r\n          onClick={() => setSettingsOpen(true)}\r\n        >\r\n          ⚙️\r\n        </button>\r\n      </div>\r\n      <Settings isOpen={settingsOpen} onClose={() => setSettingsOpen(false)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationBar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}