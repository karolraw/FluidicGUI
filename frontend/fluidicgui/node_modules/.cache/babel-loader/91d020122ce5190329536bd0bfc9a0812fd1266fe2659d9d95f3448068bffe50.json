{"ast":null,"code":"var _jsxFileName = \"E:\\\\flow chemistry\\\\fluidicGUI\\\\frontend\\\\fluidicgui\\\\src\\\\components\\\\Flowchart\\\\CustomNode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Handle, Position } from 'react-flow-renderer';\nimport { backgroundVariants } from '../../styles/backgroundStyles';\nimport { useButtonStyles } from '../../styles/ButtonStyleProvider';\n\n// Import the JSON data for node properties\nimport defaultProperties from '../../data/defaultProperties.json';\n\n// Create a global event emitter for communication between components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif (!window.customEvents) {\n  window.customEvents = {\n    openSpectrometer: node => {\n      console.log('Global openSpectrometer called, but no handler is registered');\n    },\n    setSpectrometerHandler: handler => {\n      window.customEvents.openSpectrometer = handler;\n      console.log('Spectrometer handler registered');\n    },\n    openPump: node => {\n      console.log('Global openPump called, but no handler is registered');\n    },\n    setPumpHandler: handler => {\n      window.customEvents.openPump = handler;\n      console.log('Pump handler registered');\n    }\n  };\n}\nconst CustomNode = ({\n  data,\n  id,\n  selected,\n  onClick\n}) => {\n  _s();\n  const [expanded, setExpanded] = useState(false); // State to manage expansion\n  const [nodeProperties, setNodeProperties] = useState([]); // Store the properties from JSON\n  const [isCustomMqttInput, setIsCustomMqttInput] = useState(false); // State for MQTT input mode\n  const buttonVariants = useButtonStyles();\n  const handleContextMenu = event => {\n    event.preventDefault();\n    console.log('Right-click detected on node:', id); // Log the right-click\n    if (data.onContextMenu) {\n      data.onContextMenu(event); // Pass the event to the parent if a handler is provided\n    }\n  };\n\n  // Debugging: Check if defaultProperties and data.type are loaded correctly\n  useEffect(() => {\n    console.log('Default Properties:', defaultProperties); // Check if the JSON is loaded correctly\n\n    if (defaultProperties[data.type]) {\n      console.log('Node Type Found:', data.type);\n      setNodeProperties(defaultProperties[data.type].properties);\n    } else {\n      console.log('Node Type Not Found:', data.type);\n      setNodeProperties([]);\n    }\n  }, [data.type, data.properties]);\n\n  // Toggle expand/collapse\n  const toggleExpand = () => setExpanded(!expanded);\n\n  // Handler for opening USBSpectrometer\n  const handleOpenSpectrometer = event => {\n    event.stopPropagation(); // Prevent node selection\n    console.log(\"Opening spectrometer for node:\", data);\n\n    // Find MQTTname from properties array if not directly on data object\n    let mqttName = data.MQTTname;\n\n    // If MQTTname isn't directly on the data object, look for it in properties array\n    if (!mqttName && data.properties) {\n      const mqttNameProp = data.properties.find(prop => prop.name === 'MQTTname');\n      mqttName = mqttNameProp ? data[mqttNameProp.name] || mqttNameProp.default : undefined;\n    }\n\n    // Prepare the node data to send to the global handler\n    const spectrometerNodeData = {\n      id: id,\n      label: data.label,\n      type: data.type === 'MQTTSpectrometer' ? 'MQTTSpectrometer' : 'USBSpectrometer',\n      MQTTname: mqttName\n    };\n    console.log(\"Sending spectrometer node data with MQTTname:\", mqttName);\n\n    // Use the global event system to communicate with App component\n    if (window.customEvents && window.customEvents.openSpectrometer) {\n      console.log(\"Calling global openSpectrometer handler\");\n      window.customEvents.openSpectrometer(spectrometerNodeData);\n    } else {\n      console.error(\"Global openSpectrometer handler not found\");\n    }\n  };\n\n  // Handler for opening Pump control panel\n  const handleOpenPump = event => {\n    event.stopPropagation(); // Prevent node selection\n    console.log(\"Opening pump control for node:\", data);\n\n    // Find MQTTname from properties array if not directly on data object\n    let mqttName = data.MQTTname;\n\n    // If MQTTname isn't directly on the data object, look for it in properties array\n    if (!mqttName && data.properties) {\n      const mqttNameProp = data.properties.find(prop => prop.name === 'MQTTname');\n      mqttName = mqttNameProp ? data[mqttNameProp.name] || mqttNameProp.default : undefined;\n    }\n\n    // Prepare the node data to send to the global handler\n    const pumpNodeData = {\n      id: id,\n      label: data.label,\n      type: 'pump',\n      MQTTname: mqttName\n    };\n    console.log(\"Sending pump node data with MQTTname:\", mqttName);\n\n    // Use the global event system to communicate with App component\n    if (window.customEvents && window.customEvents.openPump) {\n      console.log(\"Calling global openPump handler\");\n      window.customEvents.openPump(pumpNodeData);\n    } else {\n      console.error(\"Global openPump handler not found\");\n    }\n  };\n\n  // Render properties dynamically based on node type from JSON\n  const renderProperties = () => {\n    if (!data.properties || data.properties.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No properties to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 14\n      }, this);\n    }\n    return data.properties.map(property => {\n      // Special handling for MQTTname property\n      if (property.name === 'MQTTname') {\n        // Check if current MQTTname matches any detected device\n        const matchingDevice = window.detectedDevices ? window.detectedDevices.find(device => device.MQTTname === data[property.name]) : null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.propertyItem,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.mqttLabelContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.mqttLabel,\n              children: [property.label, matchingDevice && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: styles.matchedDeviceIndicator,\n                children: [\" (Matched: \", matchingDevice.type, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), isCustomMqttInput ?\n            /*#__PURE__*/\n            // Text input for custom MQTT name\n            _jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: data[property.name] !== undefined ? data[property.name] : property.default,\n                onChange: e => data.onPropertyChange(property.name, e.target.value),\n                style: {\n                  ...styles.propertyInput,\n                  ...(matchingDevice ? styles.matchedInput : {}),\n                  borderTopRightRadius: '0',\n                  borderBottomRightRadius: '0',\n                  flex: 1\n                },\n                placeholder: \"Enter custom name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsCustomMqttInput(false),\n                style: styles.customInputToggle,\n                children: \"\\u2193\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this) :\n            /*#__PURE__*/\n            // Dropdown select for choosing from detected devices\n            _jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                style: {\n                  ...styles.propertyInput,\n                  ...(matchingDevice ? styles.matchedInput : {}),\n                  borderTopRightRadius: '0',\n                  borderBottomRightRadius: '0',\n                  flex: 1\n                },\n                value: data[property.name] !== undefined ? data[property.name] : property.default,\n                onChange: e => data.onPropertyChange(property.name, e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: data[property.name] !== undefined ? data[property.name] : property.default,\n                  children: data[property.name] !== undefined ? data[property.name] : property.default\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this), window.detectedDevices && window.detectedDevices.filter(device => device.MQTTname !== data[property.name]).map((device, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: device.MQTTname,\n                  children: [device.MQTTname, \" (\", device.type, \")\"]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsCustomMqttInput(true),\n                style: styles.customInputToggle,\n                children: \"\\u270E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, property.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this);\n      }\n\n      // Standard rendering for other properties\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.propertyItem,\n        children: property.type === 'boolean' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.booleanProperty,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: data[property.name] || property.default,\n            onChange: e => data.onPropertyChange(property.name, e.target.checked),\n            style: styles.propertyCheckbox,\n            id: `checkbox-${id}-${property.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `checkbox-${id}-${property.name}`,\n            style: styles.booleanLabel,\n            children: property.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.propertyInputContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: styles.propertyLabel,\n            children: property.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: property.type,\n            value: data[property.name] !== undefined ? data[property.name] : property.default,\n            onChange: e => data.onPropertyChange(property.name, e.target.value),\n            style: styles.propertyInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)\n      }, property.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  //style={styles.node}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick // Handle left-click selection\n    ,\n    onContextMenu: handleContextMenu // Handle right-click context menu\n    ,\n    style: {\n      padding: 10,\n      //backgroundColor: data.color || '#777',\n      border: selected ? '3px solid blue' : '1px solid #777',\n      // Highlight selected node\n      ...backgroundVariants.nodeBackground\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Left,\n      style: styles.handle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.node,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Name: \", data.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Type: \", data.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), \"    \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonVariants.secondaryButton,\n          onClick: toggleExpand,\n          children: expanded ? '▼' : '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), (data.type === 'USBSpectrometer' || data.type === 'MQTTSpectrometer') && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            ...buttonVariants.secondaryButton,\n            backgroundColor: data.type === 'MQTTSpectrometer' ? '#00AAFF' : '#AA00FF'\n          },\n          onClick: handleOpenSpectrometer,\n          title: `Open ${data.type} View`,\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), data.type === 'pump' && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            ...buttonVariants.secondaryButton,\n            backgroundColor: '#4CAF50'\n          },\n          onClick: handleOpenPump,\n          title: \"Open Pump Control\",\n          children: \"\\uD83D\\uDCA7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), expanded && renderProperties()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Right,\n      style: styles.handle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomNode, \"i/8GUq911h54k4i6Id+MrsmYpzE=\", false, function () {\n  return [useButtonStyles];\n});\n_c = CustomNode;\nconst styles = {\n  node: {\n    padding: '10px 15px',\n    borderRadius: '20px',\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    minWidth: '250px',\n    fontSize: \"33px\",\n    zIndex: 1001,\n    ...backgroundVariants.nodeBackground\n  },\n  handle: {\n    width: 25,\n    height: 25,\n    backgroundColor: '#557',\n    borderRadius: '50%'\n  },\n  button: {\n    marginTop: '0px',\n    padding: '10px',\n    cursor: 'pointer',\n    ...backgroundVariants.menuBackground,\n    borderRadius: '10px'\n  },\n  propertyItem: {\n    marginTop: '10px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    gap: '10px',\n    color: '#8c8',\n    fontSize: \"16px\"\n  },\n  propertyInput: {\n    ...backgroundVariants.inputBackground,\n    padding: '5px',\n    width: '100%',\n    color: '#fff',\n    fontSize: '14px',\n    border: '1px solid #555',\n    backgroundColor: '#333',\n    borderRadius: '4px'\n  },\n  propertyCheckbox: {\n    width: '20px',\n    height: '20px',\n    cursor: 'pointer',\n    accentColor: '#3c3'\n  },\n  mqttSelector: {\n    marginTop: '5px',\n    padding: '5px',\n    backgroundColor: '#222',\n    color: '#fff',\n    border: '1px solid #555',\n    borderRadius: '4px',\n    width: '100%',\n    ...backgroundVariants.inputBackground\n  },\n  mqttLabelContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%'\n  },\n  mqttLabel: {\n    marginBottom: '5px',\n    color: '#8c8',\n    fontWeight: 'bold'\n  },\n  matchedDeviceIndicator: {\n    color: '#0f0',\n    fontSize: '0.8em',\n    marginLeft: '5px'\n  },\n  matchedInput: {\n    backgroundColor: '#0a3a0a',\n    borderColor: '#3c3',\n    color: '#fff'\n  },\n  booleanProperty: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '5px'\n  },\n  booleanLabel: {\n    color: '#8c8',\n    fontWeight: 'bold'\n  },\n  propertyInputContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%'\n  },\n  propertyLabel: {\n    marginBottom: '5px',\n    color: '#8c8',\n    fontWeight: 'bold'\n  },\n  customInputToggle: {\n    padding: '5px 8px',\n    backgroundColor: '#444',\n    color: '#fff',\n    border: '1px solid #555',\n    borderLeft: 'none',\n    borderTopLeftRadius: '0',\n    borderBottomLeftRadius: '0',\n    borderTopRightRadius: '4px',\n    borderBottomRightRadius: '4px',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '14px'\n  }\n};\nexport default CustomNode;\nvar _c;\n$RefreshReg$(_c, \"CustomNode\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Handle","Position","backgroundVariants","useButtonStyles","defaultProperties","jsxDEV","_jsxDEV","window","customEvents","openSpectrometer","node","console","log","setSpectrometerHandler","handler","openPump","setPumpHandler","CustomNode","data","id","selected","onClick","_s","expanded","setExpanded","nodeProperties","setNodeProperties","isCustomMqttInput","setIsCustomMqttInput","buttonVariants","handleContextMenu","event","preventDefault","onContextMenu","type","properties","toggleExpand","handleOpenSpectrometer","stopPropagation","mqttName","MQTTname","mqttNameProp","find","prop","name","default","undefined","spectrometerNodeData","label","error","handleOpenPump","pumpNodeData","renderProperties","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","property","matchingDevice","detectedDevices","device","style","styles","propertyItem","mqttLabelContainer","mqttLabel","matchedDeviceIndicator","display","width","value","onChange","e","onPropertyChange","target","propertyInput","matchedInput","borderTopRightRadius","borderBottomRightRadius","flex","placeholder","customInputToggle","filter","idx","booleanProperty","checked","propertyCheckbox","htmlFor","booleanLabel","propertyInputContainer","propertyLabel","padding","border","nodeBackground","position","Left","handle","gap","secondaryButton","backgroundColor","title","Right","_c","borderRadius","alignItems","justifyContent","flexDirection","minWidth","fontSize","zIndex","height","button","marginTop","cursor","menuBackground","color","inputBackground","accentColor","mqttSelector","marginBottom","fontWeight","marginLeft","borderColor","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","$RefreshReg$"],"sources":["E:/flow chemistry/fluidicGUI/frontend/fluidicgui/src/components/Flowchart/CustomNode.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Handle, Position } from 'react-flow-renderer';\r\nimport { backgroundVariants } from '../../styles/backgroundStyles';\r\nimport { useButtonStyles } from '../../styles/ButtonStyleProvider';\r\n\r\n// Import the JSON data for node properties\r\nimport defaultProperties from '../../data/defaultProperties.json';\r\n\r\n// Create a global event emitter for communication between components\r\nif (!window.customEvents) {\r\n  window.customEvents = {\r\n    openSpectrometer: (node) => {\r\n      console.log('Global openSpectrometer called, but no handler is registered');\r\n    },\r\n    setSpectrometerHandler: (handler) => {\r\n      window.customEvents.openSpectrometer = handler;\r\n      console.log('Spectrometer handler registered');\r\n    },\r\n    openPump: (node) => {\r\n      console.log('Global openPump called, but no handler is registered');\r\n    },\r\n    setPumpHandler: (handler) => {\r\n      window.customEvents.openPump = handler;\r\n      console.log('Pump handler registered');\r\n    }\r\n  };\r\n}\r\n\r\nconst CustomNode = ({ data, id, selected, onClick }) => {\r\n  const [expanded, setExpanded] = useState(false); // State to manage expansion\r\n  const [nodeProperties, setNodeProperties] = useState([]); // Store the properties from JSON\r\n  const [isCustomMqttInput, setIsCustomMqttInput] = useState(false); // State for MQTT input mode\r\n  const buttonVariants = useButtonStyles();\r\n  \r\n  const handleContextMenu = (event) => {\r\n    event.preventDefault();\r\n    console.log('Right-click detected on node:', id); // Log the right-click\r\n    if (data.onContextMenu) {\r\n      data.onContextMenu(event);  // Pass the event to the parent if a handler is provided\r\n    }\r\n  };\r\n\r\n  // Debugging: Check if defaultProperties and data.type are loaded correctly\r\n  useEffect(() => {\r\n    console.log('Default Properties:', defaultProperties); // Check if the JSON is loaded correctly\r\n  \r\n    if (defaultProperties[data.type]) {\r\n      console.log('Node Type Found:', data.type);\r\n      setNodeProperties(defaultProperties[data.type].properties);\r\n    } else {\r\n      console.log('Node Type Not Found:', data.type);\r\n      setNodeProperties([]);\r\n    }\r\n  }, [data.type, data.properties]);\r\n\r\n  // Toggle expand/collapse\r\n  const toggleExpand = () => setExpanded(!expanded);\r\n\r\n  // Handler for opening USBSpectrometer\r\n  const handleOpenSpectrometer = (event) => {\r\n    event.stopPropagation(); // Prevent node selection\r\n    console.log(\"Opening spectrometer for node:\", data);\r\n    \r\n    // Find MQTTname from properties array if not directly on data object\r\n    let mqttName = data.MQTTname;\r\n    \r\n    // If MQTTname isn't directly on the data object, look for it in properties array\r\n    if (!mqttName && data.properties) {\r\n      const mqttNameProp = data.properties.find(prop => prop.name === 'MQTTname');\r\n      mqttName = mqttNameProp ? (data[mqttNameProp.name] || mqttNameProp.default) : undefined;\r\n    }\r\n    \r\n    // Prepare the node data to send to the global handler\r\n    const spectrometerNodeData = {\r\n      id: id,\r\n      label: data.label,\r\n      type: data.type === 'MQTTSpectrometer' ? 'MQTTSpectrometer' : 'USBSpectrometer',\r\n      MQTTname: mqttName\r\n    };\r\n    \r\n    console.log(\"Sending spectrometer node data with MQTTname:\", mqttName);\r\n    \r\n    // Use the global event system to communicate with App component\r\n    if (window.customEvents && window.customEvents.openSpectrometer) {\r\n      console.log(\"Calling global openSpectrometer handler\");\r\n      window.customEvents.openSpectrometer(spectrometerNodeData);\r\n    } else {\r\n      console.error(\"Global openSpectrometer handler not found\");\r\n    }\r\n  };\r\n\r\n  // Handler for opening Pump control panel\r\n  const handleOpenPump = (event) => {\r\n    event.stopPropagation(); // Prevent node selection\r\n    console.log(\"Opening pump control for node:\", data);\r\n    \r\n    // Find MQTTname from properties array if not directly on data object\r\n    let mqttName = data.MQTTname;\r\n    \r\n    // If MQTTname isn't directly on the data object, look for it in properties array\r\n    if (!mqttName && data.properties) {\r\n      const mqttNameProp = data.properties.find(prop => prop.name === 'MQTTname');\r\n      mqttName = mqttNameProp ? (data[mqttNameProp.name] || mqttNameProp.default) : undefined;\r\n    }\r\n    \r\n    // Prepare the node data to send to the global handler\r\n    const pumpNodeData = {\r\n      id: id,\r\n      label: data.label,\r\n      type: 'pump',\r\n      MQTTname: mqttName\r\n    };\r\n    \r\n    console.log(\"Sending pump node data with MQTTname:\", mqttName);\r\n    \r\n    // Use the global event system to communicate with App component\r\n    if (window.customEvents && window.customEvents.openPump) {\r\n      console.log(\"Calling global openPump handler\");\r\n      window.customEvents.openPump(pumpNodeData);\r\n    } else {\r\n      console.error(\"Global openPump handler not found\");\r\n    }\r\n  };\r\n\r\n  // Render properties dynamically based on node type from JSON\r\n  const renderProperties = () => {\r\n    if (!data.properties || data.properties.length === 0) {\r\n      return <div>No properties to display</div>;\r\n    }\r\n\r\n    return data.properties.map((property) => {\r\n      // Special handling for MQTTname property\r\n      if (property.name === 'MQTTname') {\r\n        // Check if current MQTTname matches any detected device\r\n        const matchingDevice = window.detectedDevices ? \r\n          window.detectedDevices.find(device => device.MQTTname === data[property.name]) : null;\r\n        \r\n        return (\r\n          <div key={property.name} style={styles.propertyItem}>\r\n            <div style={styles.mqttLabelContainer}>\r\n              <label style={styles.mqttLabel}>\r\n                {property.label}\r\n                {matchingDevice && (\r\n                  <span style={styles.matchedDeviceIndicator}> (Matched: {matchingDevice.type})</span>\r\n                )}\r\n              </label>\r\n              \r\n              {isCustomMqttInput ? (\r\n                // Text input for custom MQTT name\r\n                <div style={{ display: 'flex', width: '100%' }}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={data[property.name] !== undefined ? data[property.name] : property.default}\r\n                    onChange={(e) => data.onPropertyChange(property.name, e.target.value)}\r\n                    style={{\r\n                      ...styles.propertyInput,\r\n                      ...(matchingDevice ? styles.matchedInput : {}),\r\n                      borderTopRightRadius: '0',\r\n                      borderBottomRightRadius: '0',\r\n                      flex: 1\r\n                    }}\r\n                    placeholder=\"Enter custom name\"\r\n                  />\r\n                  <button\r\n                    onClick={() => setIsCustomMqttInput(false)}\r\n                    style={styles.customInputToggle}\r\n                  >\r\n                    ↓\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                // Dropdown select for choosing from detected devices\r\n                <div style={{ display: 'flex', width: '100%' }}>\r\n                  <select\r\n                    style={{\r\n                      ...styles.propertyInput,\r\n                      ...(matchingDevice ? styles.matchedInput : {}),\r\n                      borderTopRightRadius: '0',\r\n                      borderBottomRightRadius: '0',\r\n                      flex: 1\r\n                    }}\r\n                    value={data[property.name] !== undefined ? data[property.name] : property.default}\r\n                    onChange={(e) => data.onPropertyChange(property.name, e.target.value)}\r\n                  >\r\n                    {/* Current value */}\r\n                    <option value={data[property.name] !== undefined ? data[property.name] : property.default}>\r\n                      {data[property.name] !== undefined ? data[property.name] : property.default}\r\n                    </option>\r\n                    \r\n                    {/* Detected devices - only show if not already selected */}\r\n                    {window.detectedDevices && window.detectedDevices\r\n                      .filter(device => device.MQTTname !== data[property.name])\r\n                      .map((device, idx) => (\r\n                        <option key={idx} value={device.MQTTname}>\r\n                          {device.MQTTname} ({device.type})\r\n                        </option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                  <button\r\n                    onClick={() => setIsCustomMqttInput(true)}\r\n                    style={styles.customInputToggle}\r\n                  >\r\n                    ✎\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      \r\n      // Standard rendering for other properties\r\n      return (\r\n        <div key={property.name} style={styles.propertyItem}>\r\n          {property.type === 'boolean' ? (\r\n            <div style={styles.booleanProperty}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={data[property.name] || property.default}\r\n                onChange={(e) => data.onPropertyChange(property.name, e.target.checked)}\r\n                style={styles.propertyCheckbox}\r\n                id={`checkbox-${id}-${property.name}`}\r\n              />\r\n              <label \r\n                htmlFor={`checkbox-${id}-${property.name}`}\r\n                style={styles.booleanLabel}\r\n              >\r\n                {property.label}\r\n              </label>\r\n            </div>\r\n          ) : (\r\n            <div style={styles.propertyInputContainer}>\r\n              <label style={styles.propertyLabel}>{property.label}</label>\r\n              <input\r\n                type={property.type}\r\n                value={data[property.name] !== undefined ? data[property.name] : property.default}\r\n                onChange={(e) => data.onPropertyChange(property.name, e.target.value)}\r\n                style={styles.propertyInput}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n//style={styles.node}\r\n  return (\r\n    <div\r\n      onClick={onClick}  // Handle left-click selection\r\n      onContextMenu={handleContextMenu}  // Handle right-click context menu\r\n      style={{\r\n        padding: 10,\r\n        //backgroundColor: data.color || '#777',\r\n        border: selected ? '3px solid blue' : '1px solid #777',  // Highlight selected node\r\n        ...backgroundVariants.nodeBackground\r\n      }}\r\n    >\r\n      \r\n      <Handle\r\n        type=\"target\"\r\n        position={Position.Left}\r\n        style={styles.handle}\r\n      />\r\n      <div style={styles.node}>\r\n        <div>Name: {data.label}</div>  {/* Display node label */}\r\n        <div>Type: {data.type}</div>    {/* Display node type */}\r\n        <div style={{ display: 'flex', gap: '8px' }}>\r\n          <button style={buttonVariants.secondaryButton} onClick={toggleExpand}>\r\n            {expanded ? '▼' : '▶'}\r\n          </button>\r\n          {/* Add spectrometer button for appropriate node types */}\r\n          {(data.type === 'USBSpectrometer' || data.type === 'MQTTSpectrometer') && (\r\n            <button \r\n              style={{\r\n                ...buttonVariants.secondaryButton,\r\n                backgroundColor: data.type === 'MQTTSpectrometer' ? '#00AAFF' : '#AA00FF',\r\n              }} \r\n              onClick={handleOpenSpectrometer}\r\n              title={`Open ${data.type} View`}\r\n            >\r\n              📊\r\n            </button>\r\n          )}\r\n          {/* Add pump button for pump node type */}\r\n          {data.type === 'pump' && (\r\n            <button \r\n              style={{\r\n                ...buttonVariants.secondaryButton,\r\n                backgroundColor: '#4CAF50',\r\n              }} \r\n              onClick={handleOpenPump}\r\n              title=\"Open Pump Control\"\r\n            >\r\n              💧\r\n            </button>\r\n          )}\r\n        </div>\r\n        {expanded && renderProperties()}\r\n      </div>\r\n      <Handle\r\n        type=\"source\"\r\n        position={Position.Right}\r\n        style={styles.handle}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  node: {\r\n    padding: '10px 15px',\r\n    borderRadius: '20px',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'column',\r\n    minWidth: '250px',\r\n    fontSize: \"33px\",\r\n    zIndex: 1001,\r\n    ...backgroundVariants.nodeBackground\r\n  },\r\n  handle: {\r\n    width: 25,\r\n    height: 25,\r\n    backgroundColor: '#557',\r\n    borderRadius: '50%',\r\n  },\r\n  button: {\r\n    marginTop: '0px',\r\n    padding: '10px',\r\n    cursor: 'pointer',\r\n    ...backgroundVariants.menuBackground,\r\n    borderRadius: '10px',\r\n  },\r\n  propertyItem: {\r\n    marginTop: '10px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    gap: '10px',\r\n    color: '#8c8',\r\n    fontSize: \"16px\"\r\n  },\r\n  propertyInput: {\r\n    ...backgroundVariants.inputBackground,\r\n    padding: '5px',\r\n    width: '100%',\r\n    color: '#fff',\r\n    fontSize: '14px',\r\n    border: '1px solid #555',\r\n    backgroundColor: '#333',\r\n    borderRadius: '4px'\r\n  },\r\n  propertyCheckbox: {\r\n    width: '20px',\r\n    height: '20px',\r\n    cursor: 'pointer',\r\n    accentColor: '#3c3'\r\n  },\r\n  mqttSelector: {\r\n    marginTop: '5px',\r\n    padding: '5px',\r\n    backgroundColor: '#222',\r\n    color: '#fff',\r\n    border: '1px solid #555',\r\n    borderRadius: '4px',\r\n    width: '100%',\r\n    ...backgroundVariants.inputBackground\r\n  },\r\n  mqttLabelContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%'\r\n  },\r\n  mqttLabel: {\r\n    marginBottom: '5px',\r\n    color: '#8c8',\r\n    fontWeight: 'bold'\r\n  },\r\n  matchedDeviceIndicator: {\r\n    color: '#0f0',\r\n    fontSize: '0.8em',\r\n    marginLeft: '5px'\r\n  },\r\n  matchedInput: {\r\n    backgroundColor: '#0a3a0a',\r\n    borderColor: '#3c3',\r\n    color: '#fff'\r\n  },\r\n  booleanProperty: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: '5px'\r\n  },\r\n  booleanLabel: {\r\n    color: '#8c8',\r\n    fontWeight: 'bold'\r\n  },\r\n  propertyInputContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%'\r\n  },\r\n  propertyLabel: {\r\n    marginBottom: '5px',\r\n    color: '#8c8',\r\n    fontWeight: 'bold'\r\n  },\r\n  customInputToggle: {\r\n    padding: '5px 8px',\r\n    backgroundColor: '#444',\r\n    color: '#fff',\r\n    border: '1px solid #555',\r\n    borderLeft: 'none',\r\n    borderTopLeftRadius: '0',\r\n    borderBottomLeftRadius: '0',\r\n    borderTopRightRadius: '4px',\r\n    borderBottomRightRadius: '4px',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '14px'\r\n  }\r\n};\r\n\r\nexport default CustomNode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}