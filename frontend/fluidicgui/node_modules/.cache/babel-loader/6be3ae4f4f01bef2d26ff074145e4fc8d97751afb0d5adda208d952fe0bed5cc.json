{"ast":null,"code":"var _jsxFileName = \"E:\\\\flow chemistry\\\\fluidicGUI\\\\frontend\\\\fluidicgui\\\\src\\\\styles\\\\ButtonStyleProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { useButtonColorScheme } from '../context/ColorSchemeContext';\nimport { buttonStyles, createDynamicButtonStyles } from './buttonStyles';\n\n// Create a context for button styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonStyleContext = /*#__PURE__*/createContext(null);\n\n// Button style provider component\nexport const ButtonStyleProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    buttonColorScheme\n  } = useButtonColorScheme();\n\n  // Define color schemes for buttons\n  const colorSchemes = {\n    viridis: {\n      primary: {\n        base: '#33A077',\n        // greenish teal from viridis\n        hover: '#2D8A69'\n      },\n      secondary: {\n        base: '#472D7B',\n        // deep purple from viridis\n        hover: '#3B2565'\n      },\n      info: {\n        base: '#29AF7F',\n        // another teal from viridis\n        hover: '#229169'\n      },\n      warning: {\n        base: '#95D840',\n        // lime green from viridis\n        hover: '#7FB636'\n      },\n      danger: {\n        base: '#FDE725',\n        // yellow from viridis\n        hover: '#D6C321'\n      }\n    },\n    plasma: {\n      primary: {\n        base: '#952E98',\n        // violet from plasma\n        hover: '#7F2682'\n      },\n      secondary: {\n        base: '#470B6C',\n        // deep purple from plasma\n        hover: '#3C095A'\n      },\n      info: {\n        base: '#E06FC0',\n        // pink from plasma\n        hover: '#C65DAA'\n      },\n      warning: {\n        base: '#F7B53B',\n        // orange from plasma\n        hover: '#D19932'\n      },\n      danger: {\n        base: '#FDB92E',\n        // yellow-orange from plasma\n        hover: '#D99B26'\n      }\n    },\n    inferno: {\n      primary: {\n        base: '#BB3754',\n        // red-burgundy from inferno\n        hover: '#9F2F47'\n      },\n      secondary: {\n        base: '#781C6D',\n        // deep purple from inferno\n        hover: '#65175B'\n      },\n      info: {\n        base: '#EC7625',\n        // orange from inferno\n        hover: '#C86521'\n      },\n      warning: {\n        base: '#F57D15',\n        // orange from inferno\n        hover: '#D06A12'\n      },\n      danger: {\n        base: '#FCFFA4',\n        // bright yellow from inferno\n        hover: '#D9D98C'\n      }\n    },\n    cividis: {\n      primary: {\n        base: '#61B8A9',\n        // teal from cividis\n        hover: '#529D90'\n      },\n      secondary: {\n        base: '#1E4F80',\n        // deep blue from cividis\n        hover: '#19426D'\n      },\n      info: {\n        base: '#86C4A5',\n        // blue-green from cividis\n        hover: '#72A68C'\n      },\n      warning: {\n        base: '#CFD88A',\n        // lime green from cividis\n        hover: '#B0B875'\n      },\n      danger: {\n        base: '#FFF00E',\n        // yellow from cividis\n        hover: '#D9CC0C'\n      }\n    },\n    turbo: {\n      primary: {\n        base: '#30A4CA',\n        // bright blue from turbo\n        hover: '#288AAB'\n      },\n      secondary: {\n        base: '#3B2EC2',\n        // deep blue from turbo\n        hover: '#3227A4'\n      },\n      info: {\n        base: '#50E72B',\n        // bright green from turbo\n        hover: '#44C425'\n      },\n      warning: {\n        base: '#F9E723',\n        // yellow from turbo\n        hover: '#D4C41E'\n      },\n      danger: {\n        base: '#D73028',\n        // bright red from turbo\n        hover: '#B72822'\n      }\n    },\n    // Default colors used when no color scheme is selected\n    default: {\n      primary: {\n        base: '#4CAF50',\n        hover: '#45a049'\n      },\n      secondary: {\n        base: '#2196F3',\n        hover: '#1976D2'\n      },\n      danger: {\n        base: '#f44336',\n        hover: '#d32f2f'\n      },\n      warning: {\n        base: '#ff9800',\n        hover: '#f57c00'\n      },\n      info: {\n        base: '#00bcd4',\n        hover: '#00acc1'\n      }\n    }\n  };\n\n  // Get the current color scheme or fall back to default\n  const currentColors = colorSchemes[buttonColorScheme] || colorSchemes.default;\n\n  // Create dynamic button styles based on the current color scheme\n  const dynamicButtonVariants = createDynamicButtonStyles(currentColors);\n  return /*#__PURE__*/_jsxDEV(ButtonStyleContext.Provider, {\n    value: dynamicButtonVariants,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook to use button styles\n_s(ButtonStyleProvider, \"GFlFh3O1CST80vh7paUJxuraQqo=\", false, function () {\n  return [useButtonColorScheme];\n});\n_c = ButtonStyleProvider;\nexport const useButtonStyles = () => {\n  _s2();\n  const buttonVariants = useContext(ButtonStyleContext);\n  if (!buttonVariants) {\n    throw new Error('useButtonStyles must be used within a ButtonStyleProvider');\n  }\n  return buttonVariants;\n};\n_s2(useButtonStyles, \"KAY1utEQvoCXou2WXLzrmlWVUJk=\");\nvar _c;\n$RefreshReg$(_c, \"ButtonStyleProvider\");","map":{"version":3,"names":["React","createContext","useContext","useButtonColorScheme","buttonStyles","createDynamicButtonStyles","jsxDEV","_jsxDEV","ButtonStyleContext","ButtonStyleProvider","children","_s","buttonColorScheme","colorSchemes","viridis","primary","base","hover","secondary","info","warning","danger","plasma","inferno","cividis","turbo","default","currentColors","dynamicButtonVariants","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useButtonStyles","_s2","buttonVariants","Error","$RefreshReg$"],"sources":["E:/flow chemistry/fluidicGUI/frontend/fluidicgui/src/styles/ButtonStyleProvider.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\r\nimport { useButtonColorScheme } from '../context/ColorSchemeContext';\r\nimport { buttonStyles, createDynamicButtonStyles } from './buttonStyles';\r\n\r\n// Create a context for button styles\r\nconst ButtonStyleContext = createContext(null);\r\n\r\n// Button style provider component\r\nexport const ButtonStyleProvider = ({ children }) => {\r\n  const { buttonColorScheme } = useButtonColorScheme();\r\n  \r\n  // Define color schemes for buttons\r\n  const colorSchemes = {\r\n    viridis: {\r\n      primary: {\r\n        base: '#33A077', // greenish teal from viridis\r\n        hover: '#2D8A69'\r\n      },\r\n      secondary: {\r\n        base: '#472D7B', // deep purple from viridis\r\n        hover: '#3B2565'\r\n      },\r\n      info: {\r\n        base: '#29AF7F', // another teal from viridis\r\n        hover: '#229169'\r\n      },\r\n      warning: {\r\n        base: '#95D840', // lime green from viridis\r\n        hover: '#7FB636'\r\n      },\r\n      danger: {\r\n        base: '#FDE725', // yellow from viridis\r\n        hover: '#D6C321'\r\n      }\r\n    },\r\n    plasma: {\r\n      primary: {\r\n        base: '#952E98', // violet from plasma\r\n        hover: '#7F2682'\r\n      },\r\n      secondary: {\r\n        base: '#470B6C', // deep purple from plasma\r\n        hover: '#3C095A'\r\n      },\r\n      info: {\r\n        base: '#E06FC0', // pink from plasma\r\n        hover: '#C65DAA'\r\n      },\r\n      warning: {\r\n        base: '#F7B53B', // orange from plasma\r\n        hover: '#D19932'\r\n      },\r\n      danger: {\r\n        base: '#FDB92E', // yellow-orange from plasma\r\n        hover: '#D99B26'\r\n      }\r\n    },\r\n    inferno: {\r\n      primary: {\r\n        base: '#BB3754', // red-burgundy from inferno\r\n        hover: '#9F2F47'\r\n      },\r\n      secondary: {\r\n        base: '#781C6D', // deep purple from inferno\r\n        hover: '#65175B'\r\n      },\r\n      info: {\r\n        base: '#EC7625', // orange from inferno\r\n        hover: '#C86521'\r\n      },\r\n      warning: {\r\n        base: '#F57D15', // orange from inferno\r\n        hover: '#D06A12'\r\n      },\r\n      danger: {\r\n        base: '#FCFFA4', // bright yellow from inferno\r\n        hover: '#D9D98C'\r\n      }\r\n    },\r\n    cividis: {\r\n      primary: {\r\n        base: '#61B8A9', // teal from cividis\r\n        hover: '#529D90'\r\n      },\r\n      secondary: {\r\n        base: '#1E4F80', // deep blue from cividis\r\n        hover: '#19426D'\r\n      },\r\n      info: {\r\n        base: '#86C4A5', // blue-green from cividis\r\n        hover: '#72A68C'\r\n      },\r\n      warning: {\r\n        base: '#CFD88A', // lime green from cividis\r\n        hover: '#B0B875'\r\n      },\r\n      danger: {\r\n        base: '#FFF00E', // yellow from cividis\r\n        hover: '#D9CC0C'\r\n      }\r\n    },\r\n    turbo: {\r\n      primary: {\r\n        base: '#30A4CA', // bright blue from turbo\r\n        hover: '#288AAB'\r\n      },\r\n      secondary: {\r\n        base: '#3B2EC2', // deep blue from turbo\r\n        hover: '#3227A4'\r\n      },\r\n      info: {\r\n        base: '#50E72B', // bright green from turbo\r\n        hover: '#44C425'\r\n      },\r\n      warning: {\r\n        base: '#F9E723', // yellow from turbo\r\n        hover: '#D4C41E'\r\n      },\r\n      danger: {\r\n        base: '#D73028', // bright red from turbo\r\n        hover: '#B72822'\r\n      }\r\n    },\r\n    // Default colors used when no color scheme is selected\r\n    default: {\r\n      primary: {\r\n        base: '#4CAF50',\r\n        hover: '#45a049'\r\n      },\r\n      secondary: {\r\n        base: '#2196F3',\r\n        hover: '#1976D2'\r\n      },\r\n      danger: {\r\n        base: '#f44336',\r\n        hover: '#d32f2f'\r\n      },\r\n      warning: {\r\n        base: '#ff9800',\r\n        hover: '#f57c00'\r\n      },\r\n      info: {\r\n        base: '#00bcd4',\r\n        hover: '#00acc1'\r\n      }\r\n    }\r\n  };\r\n\r\n  // Get the current color scheme or fall back to default\r\n  const currentColors = colorSchemes[buttonColorScheme] || colorSchemes.default;\r\n  \r\n  // Create dynamic button styles based on the current color scheme\r\n  const dynamicButtonVariants = createDynamicButtonStyles(currentColors);\r\n\r\n  return (\r\n    <ButtonStyleContext.Provider value={dynamicButtonVariants}>\r\n      {children}\r\n    </ButtonStyleContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use button styles\r\nexport const useButtonStyles = () => {\r\n  const buttonVariants = useContext(ButtonStyleContext);\r\n  if (!buttonVariants) {\r\n    throw new Error('useButtonStyles must be used within a ButtonStyleProvider');\r\n  }\r\n  return buttonVariants;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}